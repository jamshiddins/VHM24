generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/client/machines"
}

datasource db {
  provider = "postgresql"
  url      = env("MACHINES_DATABASE_URL")
}

// ENUMS
enum MachineStatus {
  ONLINE
  OFFLINE
  MAINTENANCE
  ERROR
}

// MODELS
model Location {
  id          String    @id @default(cuid())
  name        String
  address     String
  latitude    Float?
  longitude   Float?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  machines    Machine[]
}

model Machine {
  id           String        @id @default(cuid())
  code         String        @unique
  serialNumber String        @unique
  type         String
  name         String
  status       MachineStatus @default(OFFLINE)
  locationId   String?
  location     Location?     @relation(fields: [locationId], references: [id])
  lastPing     DateTime?
  metadata     Json?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  
  // Relations
  telemetry        MachineTelemetry[]
  serviceHistory   ServiceHistory[]
}

model MachineTelemetry {
  id          String   @id @default(cuid())
  machineId   String
  machine     Machine  @relation(fields: [machineId], references: [id])
  temperature Float?
  humidity    Float?
  sales       Int?
  errors      String[]
  rawData     Json
  createdAt   DateTime @default(now())
  
  @@index([machineId, createdAt])
}

model ServiceHistory {
  id              String    @id @default(cuid())
  machineId       String
  machine         Machine   @relation(fields: [machineId], references: [id])
  serviceType     String    // CLEANING, REPAIR, REFILL, INSPECTION, OTHER
  description     String
  performedById   String    // User ID from auth service
  performedAt     DateTime  @default(now())
  nextServiceDate DateTime?
  photos          String[]
  location        String?   // latitude,longitude
  metadata        Json?
  
  @@index([machineId])
  @@index([performedAt])
}

// Machine configuration
model MachineConfig {
  id          String   @id @default(cuid())
  machineId   String   @unique
  settings    Json     // Machine-specific settings
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  
  @@index([machineId])
}
