const __fs = require('fs';);'
const __path = require('path';);''
const { spawn, exec } = require('child_process';);''

'
console.log('üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –°–ò–°–¢–ï–ú–´ VHM24 –° TELEGRAM –ë–û–¢–û–ú\n');'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
function killPort(_port) {
  return new Promise(_(__resolve) => {;'
    if (process.platform === 'win32') {''
      exec(_`netstat -ano | findstr :${port}`, _(err,  _stdout) => {`
        if (stdout) {`
          const __lines = stdout.trim().split('\n';);'
          lines.forEach(_(_line) => {
            const __parts = line.trim().split(/\s+/;);
            const __pid = parts[parts.length - 1;];'
            if (pid && pid !== '0') {'
              try {'
                exec(_`taskkill /F /PID ${pid}`, _() => {});`
              } catch (e) {}
            }
          });
        }
        setTimeout(resolve, 1000);
      });
    } else {`
      exec(_`lsof -ti:${port} | xargs kill -9`, _() => {`
        setTimeout(resolve, 1000);
      });
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
function startProcess(_command , _args, _cwd, _name) {
  return new Promise(_(resolve) => {;`
    console.log(`üì¶ –ó–∞–ø—É—Å–∫ ${name}...`);`

    const __proc = spawn(_command , args, ;{
      cwd,
      shell: true,`
      stdio: 'inherit','
      detached: false
    });
'
    proc.on(_'error', _(_error) => {''
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ${name}:`, error);`
    });

    // –î–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–µ –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    setTimeout(_() => {`
      console.log(`‚úÖ ${name} –∑–∞–ø—É—â–µ–Ω\n`);`
      resolve();
    }, 3000);
  });
}

async function main() {
  try {`
    console.log('üìã –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:');''
    console.log('‚úÖ Backend API - –ø–æ—Ä—Ç 8000');''
    console.log('‚úÖ Web Dashboard - –ø–æ—Ä—Ç 3000');''
    console.log('‚úÖ Telegram Bot - —Ç–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω');''
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - Railway PostgreSQL');''
    console.log('‚úÖ Redis - –ø–æ–¥–∫–ª—é—á–µ–Ω\n');'
'
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...');'

    // –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –≤—Å–µ—Ö –ø–æ—Ä—Ç–∞—Ö
    await killPort(8000);
    await killPort(3000);
'
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\n');'

    // –ñ–¥–µ–º –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
    await new Promise(resolve => setTimeout(resolve, 2000));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π'
    const __backendPath = path.join(__dirname, 'backend';);''
    const __dashboardPath = path.join(__dirname, 'apps', 'web-dashboard';);''
    const __botPath = path.join(__dirname, '_services ', 'telegram-bot';);'

    if (!fs.existsSync(backendPath)) {'
      console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');'
      return;
    }

    if (!fs.existsSync(dashboardPath)) {'
      console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è apps/web-dashboard –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');'
      return;
    }

    if (!fs.existsSync(botPath)) {'
      console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è _services /telegram-bot –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');'
      return;
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º backend
    await startProcess('
      'npm',''
      ['start'],'
      backendPath,'
      'Backend API (–ø–æ—Ä—Ç 8000)''
    );

    // –ó–∞–ø—É—Å–∫–∞–µ–º frontend
    await startProcess('
      'npm',''
      ['run', 'dev'],'
      dashboardPath,'
      'Web Dashboard (–ø–æ—Ä—Ç 3000)''
    );

    // –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞'
    await startProcess('npm', ['start'], botPath, 'Telegram Bot');'
'
    console.log('\n‚úÖ –í–°–Ø –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–ê!\n');''
    console.log('üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:');''
    console.log('   http://localhost:8000/health - Backend Health Check');''
    console.log('   http://localhost:3000 - Web Dashboard');''
    console.log('   Telegram Bot - @VHM24_bot (–∏–ª–∏ –≤–∞—à username –±–æ—Ç–∞)\n');'
'
    console.log('üí° TELEGRAM –ë–û–¢:');''
    console.log('   - –û—Ç–∫—Ä–æ–π—Ç–µ Telegram');''
    console.log('   - –ù–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞');''
    console.log('   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã');''
    console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n');'
'
    console.log('üîê –†–û–õ–ò –í –ë–û–¢–ï:');''
    console.log('   - admin - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø');''
    console.log('   - manager - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏');''
    console.log('   - warehouse - —Å–∫–ª–∞–¥—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏');''
    console.log('   - operator - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—É–Ω–∫–µ—Ä–æ–≤');''
    console.log('   - technician - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ');''
    console.log('   - driver - –≤–æ–¥–∏—Ç–µ–ª—å (GPS, –ø—Ä–æ–±–µ–≥, –∑–∞–ø—Ä–∞–≤–∫–∞)\n');'
  } catch (error) {'
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);'
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞'
process.on(_'SIGINT',  _async () => {''
  console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...');'
  await killPort(8000);
  await killPort(3000);
  process.exit(0);
});

main();
'