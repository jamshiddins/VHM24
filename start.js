/**
 * VHM24 PRODUCTION START SCRIPT FOR RAILWAY
 * –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL –∏ Redis
 */

const path = require('path');
const fs = require('fs');
const { spawn } = require('child_process');

console.log('üöÇ VHM24 Railway Production Start');
console.log('Node Version:', process.version);
console.log('Current Dir:', process.cwd());
console.log('PORT:', process.env.PORT || 'NOT SET');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Railway
const required = ['DATABASE_URL', 'JWT_SECRET', 'REDIS_URL'];
const missing = required.filter(v => !process.env[v]);

if (missing.length > 0) {
  console.error('‚ùå CRITICAL: Missing env vars:', missing);
  process.exit(1);
}

// –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway —Å–µ—Ä–≤–∏—Å–∞–º
console.log('‚úÖ DATABASE_URL:', process.env.DATABASE_URL ? 'Connected to Railway PostgreSQL' : 'NOT SET');
console.log('‚úÖ REDIS_URL:', process.env.REDIS_URL ? 'Connected to Railway Redis' : 'NOT SET');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
const backendMain = path.join(__dirname, 'backend', 'src', 'index.js');
const backendPrisma = path.join(__dirname, 'backend', 'prisma', 'schema.prisma');

if (!fs.existsSync(backendMain)) {
  console.error('‚ùå CRITICAL: backend/src/index.js not found');
  process.exit(1);
}

if (!fs.existsSync(backendPrisma)) {
  console.error('‚ùå CRITICAL: backend/prisma/schema.prisma not found');
  process.exit(1);
}

console.log('‚úÖ Environment check passed');
console.log('‚úÖ File structure check passed');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π Prisma
async function runPrismaMigrations() {
  console.log('üóÑÔ∏è Running Prisma migrations...');
  
  return new Promise((resolve, reject) => {
    const migrateProcess = spawn('npx', ['prisma', 'migrate', 'deploy'], {
      cwd: path.join(__dirname, 'backend'),
      stdio: 'pipe',
      env: process.env
    });
    
    let output = '';
    let errorOutput = '';
    
    migrateProcess.stdout.on('data', (data) => {
      output += data.toString();
      console.log('[PRISMA]', data.toString().trim());
    });
    
    migrateProcess.stderr.on('data', (data) => {
      errorOutput += data.toString();
      console.error('[PRISMA ERROR]', data.toString().trim());
    });
    
    migrateProcess.on('close', (code) => {
      if (code === 0) {
        console.log('‚úÖ Prisma migrations completed successfully');
        resolve(true);
      } else {
        console.log('‚ö†Ô∏è Prisma migrations failed, but continuing...', errorOutput);
        resolve(false); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–∂–µ –µ—Å–ª–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ—à–ª–∏
      }
    });
    
    // Timeout after 30 seconds
    setTimeout(() => {
      migrateProcess.kill();
      console.log('‚è∞ Prisma migration timeout, continuing...');
      resolve(false);
    }, 30000);
  });
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function startApplication() {
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    await runPrismaMigrations();
    
    // –ú–µ–Ω—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ backend
    process.chdir(path.join(__dirname, 'backend'));
    console.log('‚úÖ Changed to backend directory');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    console.log('üöÄ Starting VHM24 Backend...');
    require('./src/index.js');
    
  } catch (error) {
    console.error('‚ùå FATAL ERROR:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
startApplication();
