# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ VHM24 –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ VHM24 –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏..."

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
$envPath = ".env"

if (!(Test-Path $envPath)) {
    Write-Error "‚ùå –§–∞–π–ª $envPath –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
}

# 2. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Å–µ—Å—Å–∏—é
Write-Host "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ $envPath..."
Get-Content $envPath | ForEach-Object {
    if ($_ -match "^\s*([A-Z0-9_]+)\s*=\s*(.+?)\s*$") {
        [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
    }
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–∏—Å–∞
$apiProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*api/index.js*" }
if ($apiProcesses) {
    Write-Host "‚úÖ API —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω. Process ID: $($apiProcesses.Id)"
} else {
    Write-Host "‚ùå API —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω."
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Worker —Å–µ—Ä–≤–∏—Å–∞
$workerProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*worker/index.js*" }
if ($workerProcesses) {
    Write-Host "‚úÖ Worker —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω. Process ID: $($workerProcesses.Id)"
} else {
    Write-Host "‚ùå Worker —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω."
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Scheduler —Å–µ—Ä–≤–∏—Å–∞
$schedulerProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*scheduler/index.js*" }
if ($schedulerProcesses) {
    Write-Host "‚úÖ Scheduler —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω. Process ID: $($schedulerProcesses.Id)"
} else {
    Write-Host "‚ùå Scheduler —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω."
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API..."
$apiUrl = [System.Environment]::GetEnvironmentVariable("API_URL")
$baseUrl = $apiUrl -replace "/api/v1$", ""
$healthUrls = @(
    "$baseUrl/health",
    "$baseUrl/api/health",
    "$apiUrl/health"
)

$healthCheckSuccess = $false
foreach ($url in $healthUrls) {
    Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ URL: $url"
    try {
        $health = Invoke-WebRequest $url -UseBasicParsing -TimeoutSec 5
        if ($health.StatusCode -eq 200) {
            Write-Host "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ URL: $url"
            Write-Host "–û—Ç–≤–µ—Ç: $($health.Content)"
            $healthCheckSuccess = $true
            break
        }
    } catch {
        Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ URL: $url"
    }
}

if (-not $healthCheckSuccess) {
    Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –≤—Å–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º URL."
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Webhook
Write-Host "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Webhook..."
$webhookUrl = [System.Environment]::GetEnvironmentVariable("WEBHOOK_URL")
$botToken = [System.Environment]::GetEnvironmentVariable("TELEGRAM_BOT_TOKEN")

try {
    $check = Invoke-WebRequest -Uri "https://api.telegram.org/bot$botToken/getWebhookInfo" -UseBasicParsing
    Write-Host "‚úÖ Telegram Webhook –ø–æ–¥–∫–ª—é—á–µ–Ω."
    Write-Host "–û—Ç–≤–µ—Ç: $($check.Content)"
} catch {
    Write-Host "‚ùå Telegram Webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏–ª–∏ URL."
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway
Write-Host "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway..."
try {
    $railwayStatus = railway status
    Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway —É—Å–ø–µ—à–Ω–æ."
    Write-Host "–°—Ç–∞—Ç—É—Å Railway: $railwayStatus"
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã 'railway status'. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Railway CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
}

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
Write-Host "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
$logsDir = "logs"
if (Test-Path $logsDir) {
    $logFiles = Get-ChildItem -Path $logsDir -Filter "*.log"
    if ($logFiles) {
        Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω—ã –ª–æ–≥-—Ñ–∞–π–ª—ã:"
        foreach ($logFile in $logFiles) {
            $lastModified = $logFile.LastWriteTime
            $size = $logFile.Length
            Write-Host "  - $($logFile.Name) (–†–∞–∑–º–µ—Ä: $size –±–∞–π—Ç, –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: $lastModified)"
        }
    } else {
        Write-Host "‚ö†Ô∏è –õ–æ–≥-—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ $logsDir."
    }
} else {
    Write-Host "‚ö†Ô∏è –ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤ $logsDir –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
}

# 8. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
Write-Host "`nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ VHM24 –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
