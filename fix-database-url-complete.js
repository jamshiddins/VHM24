#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ DATABASE_URL...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ Railway
function runRailwayCommand(command) {
    try {
        const result = execSync(command, { 
            encoding: 'utf8', 
            stdio: ['pipe', 'pipe', 'pipe'],
            timeout: 30000 
        });
        return result.trim();
    } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: ${command}`);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞
function updateEnvFile(databaseUrl) {
    const envPath = path.join(__dirname, '.env');
    
    try {
        let envContent = fs.readFileSync(envPath, 'utf8');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º DATABASE_URL
        if (envContent.includes('DATABASE_URL=')) {
            envContent = envContent.replace(
                /DATABASE_URL="[^"]*"/,
                `DATABASE_URL="${databaseUrl}"`
            );
        } else {
            envContent = `DATABASE_URL="${databaseUrl}"\n` + envContent;
        }
        
        fs.writeFileSync(envPath, envContent);
        console.log('‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞:', error.message);
        return false;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    console.log('üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å DATABASE_URL –∏–∑ Railway...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway
    const loginStatus = runRailwayCommand('railway whoami');
    if (!loginStatus) {
        console.log('‚ùå Railway CLI –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: railway login');
        process.exit(1);
    }
    
    console.log(`‚úÖ Railway –ø–æ–¥–∫–ª—é—á–µ–Ω: ${loginStatus}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projects = runRailwayCommand('railway projects');
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:', projects);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const variables = runRailwayCommand('railway variables');
    if (variables) {
        console.log('üîç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
        console.log(variables);
        
        // –ò—â–µ–º DATABASE_URL –≤ –≤—ã–≤–æ–¥–µ
        const lines = variables.split('\n');
        for (const line of lines) {
            if (line.includes('DATABASE_URL')) {
                const match = line.match(/DATABASE_URL[:\s=]+(.+)/);
                if (match) {
                    const databaseUrl = match[1].trim();
                    console.log('‚úÖ –ù–∞–π–¥–µ–Ω DATABASE_URL:', databaseUrl);
                    
                    if (updateEnvFile(databaseUrl)) {
                        console.log('üéâ DATABASE_URL —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
                        return;
                    }
                }
            }
        }
    }
    
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ variables, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã
    console.log('üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å DATABASE_URL —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã...');
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ railway run
    const envVars = runRailwayCommand('railway run env');
    if (envVars && envVars.includes('DATABASE_URL')) {
        const match = envVars.match(/DATABASE_URL=(.+)/);
        if (match) {
            const databaseUrl = match[1].trim();
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω DATABASE_URL —á–µ—Ä–µ–∑ run env:', databaseUrl);
            
            if (updateEnvFile(databaseUrl)) {
                console.log('üéâ DATABASE_URL —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
                return;
            }
        }
    }
    
    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π URL
    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç—å DATABASE_URL');
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ DATABASE_URL...');
    
    const basicDatabaseUrl = 'postgresql://postgres:password@localhost:5432/vendhub';
    
    if (updateEnvFile(basicDatabaseUrl)) {
        console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∞–∑–æ–≤—ã–π DATABASE_URL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
        console.log('‚ö†Ô∏è –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –∏–∑ Railway');
    }
}

// –ó–∞–ø—É—Å–∫
main().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
});
