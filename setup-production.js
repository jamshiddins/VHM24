#!/usr/bin/env node

const fs = require('fs').promises;
const path = require('path');
const { promisify } = require('util');
const exec = promisify(require('child_process').exec);

console.log('üöÄ VHM24 - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è production —Å Railway –∏ DigitalOcean\n');

// 1. –û–±–Ω–æ–≤–∏—Ç—å .env –¥–ª—è Railway
async function updateEnvFile() {
  console.log('üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è Railway...');
  
  const envContent = `
# Railway PostgreSQL
DATABASE_URL="postgresql://postgres:–≤–∞—à-–ø–∞—Ä–æ–ª—å@–≤–∞—à-—Ö–æ—Å—Ç.railway.app:–ø–æ—Ä—Ç/railway"

# JWT
JWT_SECRET="${require('crypto').randomBytes(32).toString('hex')}"

# Redis (Railway –∏–ª–∏ –¥—Ä—É–≥–æ–π)
REDIS_URL="redis://default:–≤–∞—à-–ø–∞—Ä–æ–ª—å@–≤–∞—à-redis-—Ö–æ—Å—Ç:–ø–æ—Ä—Ç"

# Telegram Bot
TELEGRAM_BOT_TOKEN="your-telegram-bot-token"
ADMIN_IDS="your-telegram-id"

# Services URLs (–¥–ª—è Railway)
GATEWAY_URL=https://vhm24-gateway.up.railway.app
AUTH_URL=https://vhm24-auth.up.railway.app
MACHINES_URL=https://vhm24-machines.up.railway.app
INVENTORY_URL=https://vhm24-inventory.up.railway.app
TASKS_URL=https://vhm24-tasks.up.railway.app
ROUTES_URL=https://vhm24-routes.up.railway.app
WAREHOUSE_URL=https://vhm24-warehouse.up.railway.app
RECIPES_URL=https://vhm24-recipes.up.railway.app
NOTIFICATIONS_URL=https://vhm24-notifications.up.railway.app
AUDIT_URL=https://vhm24-audit.up.railway.app
MONITORING_URL=https://vhm24-monitoring.up.railway.app

# DigitalOcean Spaces
S3_ENDPOINT=https://nyc3.digitaloceanspaces.com
S3_ACCESS_KEY=your-access-key
S3_SECRET_KEY=your-secret-key
S3_BUCKET=vhm24-uploads
S3_REGION=nyc3

# Environment
NODE_ENV=production
`;

  await fs.writeFile(path.join(__dirname, '.env.production'), envContent.trim(), 'utf8');
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω .env.production —Ñ–∞–π–ª');
  console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ .env.production:');
  console.log('   - DATABASE_URL –æ—Ç Railway PostgreSQL');
  console.log('   - REDIS_URL –æ—Ç –≤–∞—à–µ–≥–æ Redis');
  console.log('   - S3 –∫–ª—é—á–∏ –æ—Ç DigitalOcean Spaces');
}

// 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞
async function generatePrismaClient() {
  console.log('\nüîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞...');
  console.log('‚ÑπÔ∏è  Prisma –∫–ª–∏–µ–Ω—Ç - —ç—Ç–æ –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–π –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Prisma CLI –µ—Å–ª–∏ –Ω–µ—Ç
    console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Prisma CLI...');
    await exec('npm install -D prisma @prisma/client');
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    console.log('üî® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å—Ö–µ–º—ã...');
    await exec('npx prisma generate --schema=packages/database/prisma/schema.prisma');
    
    console.log('‚úÖ Prisma –∫–ª–∏–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error.message);
  }
}

// 3. –ò—Å–ø—Ä–∞–≤–∏—Ç—å bcrypt –¥–ª—è Windows
async function fixBcrypt() {
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ bcrypt –¥–ª—è Windows...');
  try {
    await exec('npm rebuild bcrypt --build-from-source');
    console.log('‚úÖ bcrypt –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω');
  } catch (error) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å bcrypt');
  }
}

// 4. –°–æ–∑–¥–∞—Ç—å railway.toml –¥–ª—è –¥–µ–ø–ª–æ—è
async function createRailwayConfig() {
  console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Railway...');
  
  const railwayConfig = `[build]
builder = "nixpacks"
buildCommand = "npm install && npx prisma generate"

[deploy]
startCommand = "node scripts/deploy-to-railway.js"
healthcheckPath = "/health"
healthcheckTimeout = 300
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 10

[[services]]
name = "gateway"
port = 8000

[[services]]
name = "auth"
port = 3001

[[services]]
name = "machines"
port = 3002

[[services]]
name = "inventory"
port = 3003

[[services]]
name = "tasks"
port = 3004

[[services]]
name = "routes"
port = 3005

[[services]]
name = "warehouse"
port = 3006

[[services]]
name = "recipes"
port = 3007

[[services]]
name = "notifications"
port = 3008

[[services]]
name = "audit"
port = 3009

[[services]]
name = "monitoring"
port = 3010
`;

  await fs.writeFile(path.join(__dirname, 'railway.toml'), railwayConfig, 'utf8');
  console.log('‚úÖ railway.toml —Å–æ–∑–¥–∞–Ω');
}

// 5. –°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å Railway –±–∞–∑–æ–π
async function createRailwayStartScript() {
  console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å Railway...');
  
  const startScript = `#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫ VHM24 —Å Railway PostgreSQL...\\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.DATABASE_URL) {
  console.error('‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
  console.log('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ DATABASE_URL –∏–∑ Railway PostgreSQL –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env');
  process.exit(1);
}

// –°–µ—Ä–≤–∏—Å—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞
const services = [
  { name: 'Gateway', path: 'services/gateway', port: 8000 },
  { name: 'Auth', path: 'services/auth', port: 3001 },
  { name: 'Recipes', path: 'services/recipes', port: 3007 },
  { name: 'Notifications', path: 'services/notifications', port: 3008 },
  { name: 'Audit', path: 'services/audit', port: 3009 },
  { name: 'Monitoring', path: 'services/monitoring', port: 3010 }
];

const processes = [];

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
services.forEach((service, index) => {
  setTimeout(() => {
    console.log(\`üöÄ –ó–∞–ø—É—Å–∫ \${service.name} –Ω–∞ –ø–æ—Ä—Ç—É \${service.port}...\`);
    
    const proc = spawn('npm', ['start'], {
      cwd: path.join(__dirname, service.path),
      shell: true,
      env: { ...process.env, PORT: service.port }
    });
    
    proc.stdout.on('data', (data) => {
      console.log(\`[\${service.name}] \${data.toString().trim()}\`);
    });
    
    proc.stderr.on('data', (data) => {
      const msg = data.toString().trim();
      if (msg && !msg.includes('ExperimentalWarning')) {
        console.error(\`[\${service.name}] ‚ö†Ô∏è  \${msg}\`);
      }
    });
    
    processes.push(proc);
  }, index * 2000);
});

// –ó–∞–ø—É—Å–∫ Web Dashboard
setTimeout(() => {
  console.log('\\nüåê –ó–∞–ø—É—Å–∫ Web Dashboard...');
  
  const dashboard = spawn('npm', ['run', 'dev'], {
    cwd: path.join(__dirname, 'apps/web-dashboard'),
    shell: true
  });
  
  dashboard.stdout.on('data', (data) => {
    console.log(\`[Dashboard] \${data.toString().trim()}\`);
  });
  
  processes.push(dashboard);
}, 15000);

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
setTimeout(() => {
  console.log('\\n‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!');
  console.log('\\nüìç –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:');
  console.log('   Gateway API: http://localhost:8000');
  console.log('   Web Dashboard: http://localhost:3000');
  console.log('\\nüåê –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway:');
  console.log('   1. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ Railway');
  console.log('   2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
  console.log('   3. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('   4. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç');
}, 20000);

process.on('SIGINT', () => {
  console.log('\\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...');
  processes.forEach(proc => proc.kill());
  process.exit(0);
});
`;

  await fs.writeFile(path.join(__dirname, 'start-with-railway.js'), startScript, 'utf8');
  console.log('‚úÖ start-with-railway.js —Å–æ–∑–¥–∞–Ω');
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VHM24 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±–ª–∞—á–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏...\n');
  
  // 1. –û–±–Ω–æ–≤–∏—Ç—å .env
  await updateEnvFile();
  
  // 2. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Prisma –∫–ª–∏–µ–Ω—Ç
  await generatePrismaClient();
  
  // 3. –ò—Å–ø—Ä–∞–≤–∏—Ç—å bcrypt
  await fixBcrypt();
  
  // 4. –°–æ–∑–¥–∞—Ç—å railway.toml
  await createRailwayConfig();
  
  // 5. –°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
  await createRailwayStartScript();
  
  console.log('\n‚úÖ –í–°–ï –ì–û–¢–û–í–û!');
  console.log('\nüìã –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ .env.production –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ:');
  console.log('   - DATABASE_URL –∏–∑ Railway PostgreSQL');
  console.log('   - REDIS_URL –∏–∑ –≤–∞—à–µ–≥–æ Redis');
  console.log('   - S3 –∫–ª—é—á–∏ –∏–∑ DigitalOcean Spaces');
  console.log('\n2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π .env:');
  console.log('   copy .env.production .env');
  console.log('\n3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫ Railway –±–∞–∑–µ:');
  console.log('   npx prisma migrate deploy --schema=packages/database/prisma/schema.prisma');
  console.log('\n4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –ª–æ–∫–∞–ª—å–Ω–æ:');
  console.log('   node start-with-railway.js');
  console.log('\n5. –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway:');
  console.log('   - –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–¥ –Ω–∞ GitHub');
  console.log('   - –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ Railway');
  console.log('   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
  console.log('   - Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç');
  
  console.log('\nüéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –æ–±–ª–∞—á–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏!');
}

// –ó–∞–ø—É—Å–∫
main().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});
