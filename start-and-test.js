#!/usr/bin/env node

const { execSync } = require('child_process');
const http = require('http');

console.log('üöÄ –ó–∞–ø—É—Å–∫ VHM24 —Å –ø–æ–ª–Ω—ã–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º...');

try {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç
    console.log('üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞...');
    execSync('cd backend && npx prisma generate', { stdio: 'inherit' });
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
    console.log('üåê –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...');
    const server = require('./backend/src/index.js');
    
    // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    setTimeout(async () => {
        await testEndpoints();
    }, 3000);
    
} catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error.message);
    process.exit(1);
}

async function testEndpoints() {
    const baseUrl = process.env.API_URL || 'http://localhost:3000';
    
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...');
    
    // –¢–µ—Å—Ç health check
    try {
        const response = await fetch(`${baseUrl}/api/health`);
        const data = await response.json();
        console.log('‚úÖ Health check:', data.status);
    } catch (error) {
        console.log('‚ùå Health check failed:', error.message);
    }
    
    // –¢–µ—Å—Ç API info
    try {
        const response = await fetch(`${baseUrl}/api/info`);
        const data = await response.json();
        console.log('‚úÖ API info:', data.name);
    } catch (error) {
        console.log('‚ùå API info failed:', error.message);
    }
    
    console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}
