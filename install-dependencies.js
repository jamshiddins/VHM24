#!/usr/bin/env node

/**
 * VHM24 Simple Dependencies Installation
 * –ü—Ä–æ—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è VHM24
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π VHM24...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å –≤—ã–≤–æ–¥–æ–º
function runCommand(command, cwd = process.cwd()) {
  try {
    console.log(`üì¶ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: ${command} –≤ ${cwd}`);
    const result = execSync(command, { 
      cwd, 
      stdio: 'inherit',
      encoding: 'utf8'
    });
    console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\n`);
    return true;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: ${error.message}\n`);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js –∏ npm
function checkPrerequisites() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...');
  
  try {
    const nodeVersion = execSync('node --version', { encoding: 'utf8' }).trim();
    const npmVersion = execSync('npm --version', { encoding: 'utf8' }).trim();
    
    console.log(`‚úÖ Node.js: ${nodeVersion}`);
    console.log(`‚úÖ npm: ${npmVersion}\n`);
    return true;
  } catch (error) {
    console.log('‚ùå Node.js –∏–ª–∏ npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
const packages = [
  'packages/database',
  'packages/shared',
  'packages/shared-types',
  'services/notifications',
  'services/audit',
  'services/gateway'
];

async function main() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
  if (!checkPrerequisites()) {
    process.exit(1);
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –∫–æ—Ä–Ω–µ
  console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
  if (!runCommand('npm install')) {
    console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...\n');
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞
  for (const pkg of packages) {
    const pkgPath = path.join(__dirname, pkg);
    const packageJsonPath = path.join(pkgPath, 'package.json');
    
    if (fs.existsSync(packageJsonPath)) {
      console.log(`üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è ${pkg}...`);
      if (!runCommand('npm install', pkgPath)) {
        console.log(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è ${pkg}, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...\n`);
      }
    } else {
      console.log(`‚ö†Ô∏è  package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ${pkg}\n`);
    }
  }

  console.log('üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:');
  console.log('   node start-all-services-with-audit.js');
  console.log('   node test-complete-system-with-notifications.js');
}

main().catch(error => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});
