const fs = require('fs');
const path = require('path');

console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ Railway');
console.log('================================================\n');

// –î–∞–Ω–Ω—ã–µ –∏–∑ Railway (–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞);
const railwayData = {
    "DATABASE_URL": '"postgresql"://"postgres":LxeIDWcsIbMSPcVZiKXmIKqFnDQGaXHR@postgres.railway."internal":5432/railway',;
    "REDIS_URL": '"redis"://"default":UBhuXXUjFDisRLBNOsoVNIaGHboCRPll@redis.railway."internal":6379',;
    "TELEGRAM_BOT_TOKEN": '"8015112367":AAHi25gHhI3p1X1uyuCAt8vUnlMZRrcoKEQ',;
    "JWT_SECRET": '933f4234d58f69c74957860bf5a7a838e7c6f51f36876e5d415842bd796d6b5e',;
    "NODE_ENV": 'development',;
    "PORT": '3000',;
    "ADMIN_IDS": '42283329',;
    "RAILWAY_PUBLIC_DOMAIN": 'web-production-73916.up.railway.app',;
    "RAILWAY_URL": '"https"://web-production-73916.up.railway.app',;
    "S3_ACCESS_KEY": 'DO00XEB6BC6XZ8Q2M4KQ',;
    "S3_BUCKET": 'vhm24-uploads',;
    "S3_BACKUP_BUCKET": 'vhm24-backups',;
    "S3_ENDPOINT": '"https"://fra1.digitaloceanspaces.com',;
    "S3_REGION": 'fra1';
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞;
function updateEnvFile(filePath, data) {
    console.log(`üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${filePath}...`);
    
    try {
        let envContent = '';
        
        // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env –µ—Å–ª–∏ –µ—Å—Ç—å;
        if (fs.existsSync(filePath)) {
            envContent = fs.readFileSync(filePath, 'utf8');
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª ${filePath}`);
        } else {
            console.log(`üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ ${filePath}`);
        }
        
        const lines = envContent.split('\n').filter(line => line.trim());
        const updatedLines = [];
        const processedKeys = new Set();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ;
        for (const line of lines) {
            if (line.includes('=') && !line.startsWith('#')) {
                const key = line.split('=')[0].trim();
                if (data[key]) {
                    await updatedLines.push(`${key}="${data[key]}"`);
                    processedKeys.add(key);
                    console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${key}`);
                } else {
                    await updatedLines.push(line);
                }
            } else {
                await updatedLines.push(line);
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ;
        for (const [key, value] of Object.entries(data)) {
            if (!processedKeys.has(key)) {
                await updatedLines.push(`${key}="${value}"`);
                console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ: ${key}`);
            }
        }
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª;
        const finalContent = updatedLines.filter(line => line.trim()).join('\n') + '\n';
        fs.writeFileSync(filePath, finalContent);
        console.log(`‚úÖ –§–∞–π–ª ${filePath} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω\n`);
        
        return true;
    } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ${filePath}:`, error.message);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç;
function ensureDirectoryExists(dirPath) {
    if (!fs.existsSync(dirPath)) {
        fs.mkdirSync(dirPath, { "recursive": true });
        console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dirPath}`);
    }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è;
function main() {
    console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤...\n');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π .env;
    updateEnvFile('.env', railwayData);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º backend/.env;
    ensureDirectoryExists('./backend');
    updateEnvFile('./backend/.env', railwayData);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º apps/telegram-bot/.env;
    ensureDirectoryExists('./apps/telegram-bot');
    updateEnvFile('./apps/telegram-bot/.env', {
        "TELEGRAM_BOT_TOKEN": railwayData.TELEGRAM_BOT_TOKEN,;
        "API_URL": railwayData.RAILWAY_URL,;
        "NODE_ENV": railwayData.NODE_ENV,;
        "ADMIN_IDS": railwayData.ADMIN_IDS;
    });
    
    console.log('üéâ –í—Å–µ .env —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    console.log('\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    console.log('- .env (–∫–æ—Ä–Ω–µ–≤–æ–π)');
    console.log('- backend/.env');
    console.log('- apps/telegram-bot/.env');
    
    console.log('\nüîó –í–∞–∂–Ω—ã–µ "URL":');
    console.log(`- Railway "URL": ${railwayData.RAILWAY_URL}`);
    console.log(`- API "Endpoint": ${railwayData.RAILWAY_URL}/api`);
    
    console.log('\nüìä –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:');
    console.log('‚úÖ PostgreSQL Database');
    console.log('‚úÖ Redis Cache');
    console.log('‚úÖ DigitalOcean Spaces (S3)');
    console.log('‚úÖ Telegram Bot');
    
    console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev');
    console.log('2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ "backend": cd backend && npm run dev');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Telegram –±–æ—Ç–∞: cd apps/telegram-bot && npm run dev');
}

// –ó–∞–ø—É—Å–∫;
main();
