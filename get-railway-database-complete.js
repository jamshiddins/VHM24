#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Railway...');

try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway
    console.log('üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway...');
    const envOutput = execSync('railway variables', { encoding: 'utf8' });
    
    console.log('üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Railway:');
    console.log(envOutput);
    
    // –ò—â–µ–º DATABASE_URL
    const lines = envOutput.split('\n');
    let databaseUrl = '';
    
    for (const line of lines) {
        if (line.includes('DATABASE_URL')) {
            const match = line.match(/DATABASE_URL\s*=\s*(.+)/);
            if (match) {
                databaseUrl = match[1].trim();
                break;
            }
        }
    }
    
    if (!databaseUrl) {
        console.log('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Railway');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–∞—Ö
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã Railway...');
        try {
            const servicesOutput = execSync('railway status', { encoding: 'utf8' });
            console.log('üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:');
            console.log(servicesOutput);
        } catch (error) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:', error.message);
        }
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        console.log('üîß –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è PostgreSQL...');
        try {
            execSync('railway add postgresql', { encoding: 'utf8' });
            console.log('‚úÖ PostgreSQL –¥–æ–±–∞–≤–ª–µ–Ω');
            
            // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
            console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
            setTimeout(() => {
                try {
                    const newEnvOutput = execSync('railway variables', { encoding: 'utf8' });
                    console.log('üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
                    console.log(newEnvOutput);
                } catch (error) {
                    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:', error.message);
                }
            }, 5000);
            
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è PostgreSQL:', error.message);
        }
        
        return;
    }
    
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω DATABASE_URL:', databaseUrl.substring(0, 50) + '...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª—ã
    const envFiles = [
        '.env',
        'backend/.env',
        'apps/telegram-bot/.env'
    ];
    
    for (const envFile of envFiles) {
        if (fs.existsSync(envFile)) {
            let content = fs.readFileSync(envFile, 'utf8');
            
            // –ó–∞–º–µ–Ω—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º DATABASE_URL
            if (content.includes('DATABASE_URL=')) {
                content = content.replace(/DATABASE_URL=.*/g, `DATABASE_URL="${databaseUrl}"`);
            } else {
                content += `\nDATABASE_URL="${databaseUrl}"\n`;
            }
            
            fs.writeFileSync(envFile, content);
            console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω ${envFile}`);
        }
    }
    
    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    const additionalVars = {
        'JWT_SECRET': '933f4234d58f69c74957860bf5a7a838e7c6f51f36876e5d415842bd796d6b5e',
        'TELEGRAM_BOT_TOKEN': '8015112367:AAHi25gHhI3p1X1uyuCAt8vUnlMZRrcoKEQ',
        'REDIS_URL': 'redis://default:UBhuXXUjFDisRLBNOsoVNIaGHboCRPll@redis.railway.internal:6379',
        'S3_ACCESS_KEY': 'DO00XEB6BC6XZ8Q2M4KQ',
        'S3_SECRET_KEY': 'missing_secret_key',
        'S3_BUCKET': 'vhm24-uploads',
        'S3_ENDPOINT': 'https://fra1.digitaloceanspaces.com',
        'S3_REGION': 'fra1',
        'PORT': '3000',
        'NODE_ENV': 'development',
        'RAILWAY_PUBLIC_DOMAIN': 'web-production-73916.up.railway.app',
        'ADMIN_IDS': '42283329'
    };
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π .env —Ñ–∞–π–ª
    let mainEnvContent = fs.readFileSync('.env', 'utf8');
    
    for (const [key, value] of Object.entries(additionalVars)) {
        if (!mainEnvContent.includes(`${key}=`)) {
            mainEnvContent += `${key}="${value}"\n`;
        }
    }
    
    fs.writeFileSync('.env', mainEnvContent);
    
    console.log('üéâ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
    console.log('üìã DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    
    // –ï—Å–ª–∏ Railway CLI –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–∑–¥–∞–¥–∏–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    const fallbackEnv = `# Database
DATABASE_URL="postgresql://postgres:password@localhost:5432/vendhub"

# JWT Secret
JWT_SECRET="933f4234d58f69c74957860bf5a7a838e7c6f51f36876e5d415842bd796d6b5e"

# Telegram Bot
TELEGRAM_BOT_TOKEN="8015112367:AAHi25gHhI3p1X1uyuCAt8vUnlMZRrcoKEQ"

# Redis
REDIS_URL="redis://default:UBhuXXUjFDisRLBNOsoVNIaGHboCRPll@redis.railway.internal:6379"

# S3 / DigitalOcean Spaces
S3_ACCESS_KEY="DO00XEB6BC6XZ8Q2M4KQ"
S3_SECRET_KEY="missing_secret_key"
S3_BUCKET="vhm24-uploads"
S3_BACKUP_BUCKET="vhm24-backups"
S3_ENDPOINT="https://fra1.digitaloceanspaces.com"
S3_REGION="fra1"

# Server
PORT=3000
NODE_ENV=development

# Railway
RAILWAY_PUBLIC_DOMAIN="web-production-73916.up.railway.app"
ADMIN_IDS="42283329"
`;

    fs.writeFileSync('.env', fallbackEnv);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env');
}
