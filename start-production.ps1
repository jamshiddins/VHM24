# –ó–∞–ø—É—Å–∫ VHM24 –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ URL –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Railway + Vercel + Telegram + DigitalOcean

Write-Host "üöÄ –ó–∞–ø—É—Å–∫ VHM24 –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏..."

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
$envPath = ".env"

if (!(Test-Path $envPath)) {
    Write-Error "‚ùå –§–∞–π–ª $envPath –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
}

# 2. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Å–µ—Å—Å–∏—é
Write-Host "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ $envPath..."
Get-Content $envPath | ForEach-Object {
    if ($_ -match "^\s*([A-Z0-9_]+)\s*=\s*(.+?)\s*$") {
        [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
    }
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."
$requiredVars = @(
    "DATABASE_URL", "DATABASE_URL_PUBLIC",
    "REDIS_URL", "REDIS_URL_PUBLIC",
    "API_URL",
    "TELEGRAM_BOT_TOKEN", "WEBHOOK_URL",
    "S3_ACCESS_KEY", "S3_SECRET_KEY", "S3_REGION", "S3_BUCKET_NAME"
)

$missingVars = @()
foreach ($var in $requiredVars) {
    if ([string]::IsNullOrEmpty([System.Environment]::GetEnvironmentVariable($var))) {
        $missingVars += $var
    }
}

if ($missingVars.Count -gt 0) {
    Write-Error "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: $($missingVars -join ', ')"
    exit 1
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway
Write-Host "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway..."
try {
    $railwayStatus = railway status
    if ($railwayStatus -match "Error") {
        Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway. –í—ã–ø–æ–ª–Ω–∏—Ç–µ 'railway login'."
        exit 1
    }
    Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway —É—Å–ø–µ—à–Ω–æ."
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã 'railway status'. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Railway CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    exit 1
}

# 5. –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–∏—Å–∞
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–∏—Å–∞..."
try {
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
    $env:NODE_ENV = "production"
    $env:PORT = "3000"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–∏—Å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    Start-Process -NoNewWindow -FilePath "node" -ArgumentList "api/index.js" -RedirectStandardOutput "logs/api.log" -RedirectStandardError "logs/api-error.log"
    Write-Host "‚úÖ API —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω."
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ API —Å–µ—Ä–≤–∏—Å–∞: $_"
    exit 1
}

# 6. –ó–∞–ø—É—Å–∫ Worker —Å–µ—Ä–≤–∏—Å–∞
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Worker —Å–µ—Ä–≤–∏—Å–∞..."
try {
    # –ó–∞–ø—É—Å–∫–∞–µ–º Worker —Å–µ—Ä–≤–∏—Å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    Start-Process -NoNewWindow -FilePath "node" -ArgumentList "worker/index.js" -RedirectStandardOutput "logs/worker.log" -RedirectStandardError "logs/worker-error.log"
    Write-Host "‚úÖ Worker —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω."
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Worker —Å–µ—Ä–≤–∏—Å–∞: $_"
    exit 1
}

# 7. –ó–∞–ø—É—Å–∫ Scheduler —Å–µ—Ä–≤–∏—Å–∞
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Scheduler —Å–µ—Ä–≤–∏—Å–∞..."
try {
    # –ó–∞–ø—É—Å–∫–∞–µ–º Scheduler —Å–µ—Ä–≤–∏—Å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    Start-Process -NoNewWindow -FilePath "node" -ArgumentList "scheduler/index.js" -RedirectStandardOutput "logs/scheduler.log" -RedirectStandardError "logs/scheduler-error.log"
    Write-Host "‚úÖ Scheduler —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω."
} catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Scheduler —Å–µ—Ä–≤–∏—Å–∞: $_"
    exit 1
}

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API..."
$apiUrl = [System.Environment]::GetEnvironmentVariable("API_URL")
$baseUrl = $apiUrl -replace "/api/v1$", ""
$healthUrls = @(
    "$baseUrl/health",
    "$baseUrl/api/health",
    "$apiUrl/health"
)

$healthCheckSuccess = $false
foreach ($url in $healthUrls) {
    Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ URL: $url"
    try {
        $health = Invoke-WebRequest $url -UseBasicParsing -TimeoutSec 10
        if ($health.StatusCode -eq 200) {
            Write-Host "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ URL: $url"
            $healthCheckSuccess = $true
            break
        }
    } catch {
        Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ URL: $url"
    }
}

if (-not $healthCheckSuccess) {
    Write-Host "‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –≤—Å–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º URL. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –ø–∞–ø–∫–µ logs/."
} else {
    Write-Host "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
}

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Webhook
Write-Host "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Webhook..."
$webhookUrl = [System.Environment]::GetEnvironmentVariable("WEBHOOK_URL")
$botToken = [System.Environment]::GetEnvironmentVariable("TELEGRAM_BOT_TOKEN")

try {
    $check = Invoke-WebRequest -Uri "https://api.telegram.org/bot$botToken/getWebhookInfo" -UseBasicParsing
    Write-Host "‚úÖ Telegram Webhook –ø–æ–¥–∫–ª—é—á–µ–Ω."
    Write-Host $check.Content
} catch {
    Write-Host "‚ùå Telegram Webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏–ª–∏ URL."
}

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ DigitalOcean Spaces
Write-Host "‚òÅÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ DigitalOcean Spaces..."
$s3AccessKey = [System.Environment]::GetEnvironmentVariable("S3_ACCESS_KEY")
$s3SecretKey = [System.Environment]::GetEnvironmentVariable("S3_SECRET_KEY")
$s3Region = [System.Environment]::GetEnvironmentVariable("S3_REGION")
$s3BucketName = [System.Environment]::GetEnvironmentVariable("S3_BUCKET_NAME")

if ($s3AccessKey -and $s3SecretKey -and $s3Region -and $s3BucketName) {
    Write-Host "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è DigitalOcean Spaces –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã."
} else {
    Write-Host "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è DigitalOcean Spaces."
}

# 11. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
Write-Host "`nüéâ VHM24 —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –≤ production-–æ–∫—Ä—É–∂–µ–Ω–∏–∏!"
Write-Host "üìä API: $apiUrl"
Write-Host "ü§ñ Telegram Bot: @$([System.Environment]::GetEnvironmentVariable('TELEGRAM_BOT_TOKEN').Split(':')[0])"
Write-Host "‚òÅÔ∏è DigitalOcean Spaces: $s3BucketName.$s3Region.digitaloceanspaces.com"
Write-Host "`nüìù –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø–∞–ø–∫–µ logs/"
