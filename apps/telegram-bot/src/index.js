/**
 * Telegram –±–æ—Ç –¥–ª—è VHM24
 */
require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const RAILWAY_PUBLIC_URL = process.env.RAILWAY_PUBLIC_URL || 'http://localhost:3000';
const WEBHOOK_URL = process.env.WEBHOOK_URL || `${RAILWAY_PUBLIC_URL}/api/telegram/webhook`;
const API_BASE_URL = process.env.API_BASE_URL || `${RAILWAY_PUBLIC_URL}/api`;
const ADMIN_IDS = (process.env.ADMIN_IDS || '').split(',').map(id => id.trim());

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
if (!BOT_TOKEN) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    process.exit(1);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
bot.use((ctx, next) => {
    const user = ctx.from;
    const message = ctx.message || {};
    .toISOString()}] ${user?.id} (${user?.username}): ${message.text || '[–Ω–µ —Ç–µ–∫—Å—Ç]'}`);
    return next();
});

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const isAdmin = (ctx, next) => {
    const userId = ctx.from?.id?.toString();
    if (userId && ADMIN_IDS.includes(userId)) {
        return next();
    }
    ctx.reply('‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
    return false;
};

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenu = Markup.keyboard([
    ['üè™ –ê–≤—Ç–æ–º–∞—Ç—ã', 'üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏'],
    ['üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã', 'üë§ –ü—Ä–æ—Ñ–∏–ª—å'],
    ['‚ùì –ü–æ–º–æ—â—å']
]).resize();

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
    const welcomeMessage = `
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VHM24 (VendHub Manager)!

–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ–Ω–¥–∏–Ω–≥–æ–≤—ã–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∞–º–∏.

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:
    `;
    
    ctx.reply(welcomeMessage, mainMenu);
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.help((ctx) => {
    const helpMessage = `
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üè™ –ê–≤—Ç–æ–º–∞—Ç—ã - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ–º–∞—Ç–æ–≤
üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏ - –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏
üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API
üë§ –ü—Ä–æ—Ñ–∏–ª—å - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ

üîß –°–∏—Å—Ç–µ–º–∞ VHM24 v1.0
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    `;
    
    ctx.reply(helpMessage, mainMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
bot.hears('üè™ –ê–≤—Ç–æ–º–∞—Ç—ã', async (ctx) => {
    await handleMachinesCommand(ctx);
});

bot.hears('üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏', async (ctx) => {
    await handleTasksCommand(ctx);
});

bot.hears('üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã', async (ctx) => {
    await handleStatusCommand(ctx);
});

bot.hears('üë§ –ü—Ä–æ—Ñ–∏–ª—å', (ctx) => {
    handleProfileCommand(ctx);
});

bot.hears('‚ùì –ü–æ–º–æ—â—å', (ctx) => {
    ctx.reply(`
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:

üè™ –ê–≤—Ç–æ–º–∞—Ç—ã - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–µ–Ω–¥–∏–Ω–≥–æ–≤—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–æ–≤
üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏ - –í–∞—à–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å
üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API
üë§ –ü—Ä–æ—Ñ–∏–ª—å - –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ

–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.
    `, mainMenu);
});

// –ö–æ–º–∞–Ω–¥–∞ /status
async function handleStatusCommand(ctx) {
    try {
        ctx.reply('üîÑ –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã...');
        
        const response = await axios.get(`${API_BASE_URL}/health`, {
            timeout: 5000
        });
        
        const data = response.data;
        const statusMessage = `
‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ

üìä –°—Ç–∞—Ç—É—Å API: ${response.status === 200 ? 'OK' : '–û—à–∏–±–∫–∞'}
üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.floor(data.uptime / 60)} –º–∏–Ω
üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${new Date().toLocaleString('ru-RU')}
üîß –í–µ—Ä—Å–∏—è: ${data.version || '1.0.0'}
        `;
        
        ctx.reply(statusMessage, mainMenu);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
        ctx.reply(`
‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API

üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é
‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π URL API: ${API_BASE_URL}

–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        `, mainMenu);
    }
}

// –ö–æ–º–∞–Ω–¥–∞ /machines
async function handleMachinesCommand(ctx) {
    try {
        ctx.reply('üîÑ –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–æ–≤...');
        
        const response = await axios.get(`${API_BASE_URL}/machines`, {
            timeout: 5000
        });
        
        const machines = response.data;
        
        if (machines && machines.length > 0) {
            let message = 'üè™ –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–æ–≤:\n\n';
            machines.forEach((machine, index) => {
                const statusIcon = machine.status === 'ACTIVE' ? 'üü¢' : 
                                 machine.status === 'MAINTENANCE' ? 'üü°' : 'üî¥';
                
                message += `${index + 1}. ${machine.name || machine.id}\n`;
                message += `   üìç ${machine.location || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
                message += `   üè∑Ô∏è ${machine.model || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n`;
                message += `   ${statusIcon} ${machine.status || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n\n`;
            });
            
            ctx.reply(message, mainMenu);
        } else {
            ctx.reply('üì≠ –ê–≤—Ç–æ–º–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', mainMenu);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–æ–≤:', error.message);
        ctx.reply(`
‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–æ–≤

üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:
‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
‚Ä¢ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        `, mainMenu);
    }
}

// –ö–æ–º–∞–Ω–¥–∞ /tasks
async function handleTasksCommand(ctx) {
    try {
        ctx.reply('üîÑ –ó–∞–≥—Ä—É–∂–∞—é –≤–∞—à–∏ –∑–∞–¥–∞—á–∏...');
        
        const userId = ctx.from.id;
        const response = await axios.get(`${API_BASE_URL}/tasks?userId=${userId}`, {
            timeout: 5000
        });
        
        const tasks = response.data;
        
        if (tasks && tasks.length > 0) {
            let message = 'üìã –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n\n';
            tasks.forEach((task, index) => {
                const statusIcon = task.status === 'PENDING' ? '‚è≥' : 
                                 task.status === 'IN_PROGRESS' ? 'üîÑ' : 
                                 task.status === 'COMPLETED' ? '‚úÖ' : '‚ùì';
                
                const dueDate = task.dueDate ? 
                    new Date(task.dueDate).toLocaleDateString('ru-RU') : 
                    '–ë–µ–∑ —Å—Ä–æ–∫–∞';
                
                message += `${index + 1}. ${task.title || task.type}\n`;
                message += `   üìÖ –°—Ä–æ–∫: ${dueDate}\n`;
                message += `   ${statusIcon} ${task.status || '–ù–æ–≤–∞—è'}\n`;
                if (task.description) {
                    message += `   üìù ${task.description}\n`;
                }
                message += `\n`;
            });
            
            ctx.reply(message, mainMenu);
        } else {
            ctx.reply(`
üì≠ –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ó–∞–¥–∞—á–∏ –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
‚Ä¢ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö

–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á.
            `, mainMenu);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á:', error.message);
        ctx.reply(`
‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á

üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        `, mainMenu);
    }
}

// –ö–æ–º–∞–Ω–¥–∞ /profile
function handleProfileCommand(ctx) {
    const user = ctx.from;
    const profileMessage = `
üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:

üÜî ID: ${user.id}
üë§ –ò–º—è: ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üë§ –§–∞–º–∏–ª–∏—è: ${user.last_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìù Username: @${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üåê –Ø–∑—ã–∫: ${user.language_code || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üîß –†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ: ${ADMIN_IDS.includes(user.id.toString()) ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date().toLocaleDateString('ru-RU')}

–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏ –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    `;
    
    ctx.reply(profileMessage, mainMenu);
}

// –ö–æ–º–∞–Ω–¥–∞ /webhook (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
bot.command('webhook', isAdmin, async (ctx) => {
    try {
        ctx.reply('üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –≤–µ–±—Ö—É–∫...');
        
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ —á–µ—Ä–µ–∑ API
        const response = await axios.post(`${API_BASE_URL}/telegram/setWebhook?token=${BOT_TOKEN}`, {
            url: WEBHOOK_URL
        }, {
            timeout: 5000
        });
        
        if (response.data && response.data.success) {
            ctx.reply(`
‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

üîó URL: ${WEBHOOK_URL}
üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}
            `);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞:', error.message);
        ctx.reply(`
‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞

üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é
‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π URL API –∏–ª–∏ —Ç–æ–∫–µ–Ω

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: ${error.message}
        `);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Ç–µ–∫—Å—Ç–∞
bot.on('text', (ctx) => {
    if (!ctx.message.text.startsWith('/')) {
        ctx.reply(`
ü§î –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.
        `, mainMenu);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
    ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', mainMenu);
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
async function setupWebhook() {
    try {
        if (process.env.NODE_ENV === 'production') {
            
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
            try {
                await axios.get(`${API_BASE_URL}/health`, { timeout: 5000 });
                
                
                // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ —á–µ—Ä–µ–∑ API
                const response = await axios.post(`${API_BASE_URL}/telegram/setWebhook?token=${BOT_TOKEN}`, {
                    url: WEBHOOK_URL
                }, {
                    timeout: 5000
                });
                
                if (response.data && response.data.success) {
                    
                } else {
                    console.warn('‚ö†Ô∏è –û—Ç–≤–µ—Ç API –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —É—Å–ø–µ—à–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤–µ–±—Ö—É–∫–∞');
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞:', error.message);
                
            }
        } else {
            
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function startBot() {
    try {
        
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
        await setupWebhook();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
        try {
            const response = await axios.get(`${API_BASE_URL}/health`, { timeout: 5000 });
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: ${error.message}`);
        }
        
        // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        await bot.launch();
        
        
        // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
         || '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã'}`);
        
        // Graceful stop
        process.once('SIGINT', () => bot.stop('SIGINT'));
        process.once('SIGTERM', () => bot.stop('SIGTERM'));
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
    startBot();
}

module.exports = { bot, startBot };
