/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å FSM-—Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
 * –°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ FSM-—Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –ª–æ–≥–∏–∫—É, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
 */

const { Markup } = require('telegraf');

/**
 * –¢–∏–ø—ã –≤–≤–æ–¥–∞ –¥–ª—è FSM-—Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
 */
const InputTypes = {
  TEXT_INPUT: 'text_input',
  NUM_INPUT: 'num_input',
  SELECT: 'select',
  MEDIA_UPLOAD: 'media_upload',
  CONFIRM: 'confirm',
  SUBMIT: 'submit',
  REDIRECT: 'redirect'
};

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
 * @param {Object} options - –û–ø—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 * @param {boolean} options.showBack - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
 * @param {boolean} options.showFinish - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å"
 * @param {boolean} options.showCancel - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å"
 * @param {Array} options.additionalButtons - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
 * @returns {Object} –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
 */
function createUniversalKeyboard(options = {}) {
  const { showBack = true, showFinish = true, showCancel = true, additionalButtons = [] } = options;
  
  const buttons = [...additionalButtons];
  
  const navigationButtons = [];
  
  if (showBack) {
    navigationButtons.push(Markup.button.callback('üîô –ù–∞–∑–∞–¥', 'back'));
  }
  
  if (showFinish) {
    navigationButtons.push(Markup.button.callback('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å', 'finish'));
  }
  
  if (showCancel) {
    navigationButtons.push(Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel'));
  }
  
  if (navigationButtons.length > 0) {
    buttons.push(navigationButtons);
  }
  
  return Markup.inlineKeyboard(buttons);
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} onInput - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
 */
async function createTextInput(ctx, message, onInput, options = {}) {
  const { showKeyboard = true, keyboardOptions = {} } = options;
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º —Ç–µ–∫—Å—Ç–∞
  if (showKeyboard) {
    await ctx.reply(message, createUniversalKeyboard(keyboardOptions));
  } else {
    await ctx.reply(message);
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
  ctx.session.waitingFor = InputTypes.TEXT_INPUT;
  ctx.session.onInput = onInput;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} onInput - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –≤–≤–æ–¥–µ —á–∏—Å–ª–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞
 */
async function createNumInput(ctx, message, onInput, options = {}) {
  const { showKeyboard = true, keyboardOptions = {}, min, max, allowFloat = false } = options;
  
  // –°–æ–∑–¥–∞–µ–º —Ü–∏—Ñ—Ä–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  const numKeyboard = [
    ['1', '2', '3'],
    ['4', '5', '6'],
    ['7', '8', '9'],
    [allowFloat ? '.' : '', '0', '‚å´']
  ];
  
  const numButtons = numKeyboard.map(row => {
    return row.map(key => {
      if (key === '') return Markup.button.callback(' ', 'num_none');
      if (key === '‚å´') return Markup.button.callback('‚å´', 'num_backspace');
      return Markup.button.callback(key, `num_${key}`);
    });
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  numButtons.push([Markup.button.callback('‚úÖ –ì–æ—Ç–æ–≤–æ', 'num_done')]);
  
  // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
  if (showKeyboard) {
    const universalKeyboard = createUniversalKeyboard(keyboardOptions);
    numButtons.push(...universalKeyboard.reply_markup.inline_keyboard);
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º —á–∏—Å–ª–∞
  await ctx.reply(message, Markup.inlineKeyboard(numButtons));
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
  ctx.session.waitingFor = InputTypes.NUM_INPUT;
  ctx.session.numInput = '';
  ctx.session.onInput = onInput;
  ctx.session.numInputOptions = { min, max, allowFloat };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} items - –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤—ã–±–æ—Ä–∞
 * @param {Function} onSelect - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç–ª–µ–º–µ–Ω—Ç–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
 */
async function createSelect(ctx, message, items, onSelect, options = {}) {
  const { showKeyboard = true, keyboardOptions = {}, multiSelect = false } = options;
  
  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
  const selectButtons = items.map(item => {
    const prefix = multiSelect ? (item.selected ? '‚úÖ ' : '‚ùå ') : '';
    return [Markup.button.callback(`${prefix}${item.name}`, `select_${item.id}`)];
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –º—É–ª—å—Ç–∏–≤—ã–±–æ—Ä–∞
  if (multiSelect) {
    selectButtons.push([Markup.button.callback('‚úÖ –ì–æ—Ç–æ–≤–æ', 'select_done')]);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
  if (showKeyboard) {
    const universalKeyboard = createUniversalKeyboard(keyboardOptions);
    selectButtons.push(...universalKeyboard.reply_markup.inline_keyboard);
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –≤—ã–±–æ—Ä–∞
  await ctx.reply(message, Markup.inlineKeyboard(selectButtons));
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞
  ctx.session.waitingFor = InputTypes.SELECT;
  ctx.session.selectItems = items;
  ctx.session.onSelect = onSelect;
  ctx.session.selectOptions = { multiSelect };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} onUpload - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
 */
async function createMediaUpload(ctx, message, onUpload, options = {}) {
  const { showKeyboard = true, keyboardOptions = {}, mediaTypes = ['photo'] } = options;
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
  if (showKeyboard) {
    await ctx.reply(message, createUniversalKeyboard(keyboardOptions));
  } else {
    await ctx.reply(message);
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
  ctx.session.waitingFor = InputTypes.MEDIA_UPLOAD;
  ctx.session.onUpload = onUpload;
  ctx.session.mediaTypes = mediaTypes;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} onConfirm - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
 * @param {Function} onCancel - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
 * @param {Function} onBack - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã
 */
async function createConfirm(ctx, message, onConfirm, onCancel, onBack) {
  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const buttons = [
    [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm')],
    [Markup.button.callback('üîô –ù–∞–∑–∞–¥', 'back')],
    [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel')]
  ];
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  await ctx.reply(message, Markup.inlineKeyboard(buttons));
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  ctx.session.waitingFor = InputTypes.CONFIRM;
  ctx.session.onConfirm = onConfirm;
  ctx.session.onCancel = onCancel;
  ctx.session.onBack = onBack;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} onSubmit - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
async function createSubmit(ctx, message, onSubmit, data) {
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
  await ctx.reply(message);
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  await onSubmit(data);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  ctx.session.waitingFor = InputTypes.SUBMIT;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ –¥—Ä—É–≥–æ–º—É FSM
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} sceneName - –ò–º—è —Å—Ü–µ–Ω—ã –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * @param {Object} sceneState - –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Å—Ü–µ–Ω—É
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */
async function createRedirect(ctx, message, sceneName, sceneState = {}) {
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
  await ctx.reply(message);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  ctx.session.waitingFor = InputTypes.REDIRECT;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Å—Ü–µ–Ω—É
  ctx.session.redirectState = sceneState;
  
  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∫ –¥—Ä—É–≥–æ–π —Å—Ü–µ–Ω–µ
  await ctx.scene.enter(sceneName);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {boolean} true, –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 */
async function handleUniversalButtons(ctx) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'back') {
    if (ctx.session.onBack) {
      await ctx.session.onBack(ctx);
    } else {
      await ctx.reply('üîô –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É.');
    }
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å"
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'finish') {
    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    await ctx.reply('‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å? –ù–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.');
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    const buttons = [
      [Markup.button.callback('‚úÖ –î–∞, –∑–∞–≤–µ—Ä—à–∏—Ç—å', 'confirm_finish')],
      [Markup.button.callback('‚ùå –ù–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å', 'cancel_finish')]
    ];
    
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', Markup.inlineKeyboard(buttons));
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∏—Ç—å"
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'cancel') {
    if (ctx.session.onCancel) {
      await ctx.session.onCancel(ctx);
    } else {
      await ctx.reply('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.');
      await ctx.scene.leave();
    }
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'confirm_finish') {
    await ctx.reply('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
    await ctx.scene.enter('main_menu_fsm');
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'cancel_finish') {
    await ctx.reply('‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É.');
    return true;
  }
  
  return false;
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {boolean} true, –µ—Å–ª–∏ –≤–≤–æ–¥ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 */
async function handleNumInput(ctx) {
  if (ctx.session.waitingFor !== InputTypes.NUM_INPUT) {
    return false;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
  if (ctx.callbackQuery && ctx.callbackQuery.data.startsWith('num_')) {
    const key = ctx.callbackQuery.data.replace('num_', '');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–æ—Ç–æ–≤–æ"
    if (key === 'done') {
      const { min, max, allowFloat } = ctx.session.numInputOptions || {};
      const value = parseFloat(ctx.session.numInput);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
      if (isNaN(value)) {
        await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.');
        return true;
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      if (min !== undefined && value < min) {
        await ctx.reply(`‚ùå –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ ${min}.`);
        return true;
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      if (max !== undefined && value > max) {
        await ctx.reply(`‚ùå –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ ${max}.`);
        return true;
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
      if (!allowFloat && !Number.isInteger(value)) {
        await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.');
        return true;
      }
      
      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞
      if (ctx.session.onInput) {
        await ctx.session.onInput(value);
      }
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.waitingFor = null;
      ctx.session.numInput = '';
      ctx.session.onInput = null;
      ctx.session.numInputOptions = null;
      
      return true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "Backspace"
    if (key === 'backspace') {
      ctx.session.numInput = ctx.session.numInput.slice(0, -1);
      await ctx.reply(`–¢–µ–∫—É—â–∏–π –≤–≤–æ–¥: ${ctx.session.numInput || '0'}`);
      return true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "None"
    if (key === 'none') {
      return true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–æ—á–∫–∏
    if (key === '.') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ—á–∫–∞ –µ—â–µ –Ω–µ –≤–≤–µ–¥–µ–Ω–∞
      if (!ctx.session.numInput.includes('.')) {
        ctx.session.numInput += '.';
        await ctx.reply(`–¢–µ–∫—É—â–∏–π –≤–≤–æ–¥: ${ctx.session.numInput}`);
      }
      return true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ü–∏—Ñ—Ä—ã
    ctx.session.numInput += key;
    await ctx.reply(`–¢–µ–∫—É—â–∏–π –≤–≤–æ–¥: ${ctx.session.numInput}`);
    return true;
  }
  
  return false;
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {boolean} true, –µ—Å–ª–∏ –≤—ã–±–æ—Ä –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 */
async function handleSelect(ctx) {
  if (ctx.session.waitingFor !== InputTypes.SELECT) {
    return false;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
  if (ctx.callbackQuery && ctx.callbackQuery.data.startsWith('select_')) {
    const id = ctx.callbackQuery.data.replace('select_', '');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–æ—Ç–æ–≤–æ"
    if (id === 'done') {
      const { multiSelect } = ctx.session.selectOptions || {};
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç
      if (multiSelect) {
        const selectedItems = ctx.session.selectItems.filter(item => item.selected);
        
        if (selectedItems.length === 0) {
          await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç.');
          return true;
        }
        
        // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞
        if (ctx.session.onSelect) {
          await ctx.session.onSelect(selectedItems);
        }
      }
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.waitingFor = null;
      ctx.session.selectItems = null;
      ctx.session.onSelect = null;
      ctx.session.selectOptions = null;
      
      return true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
    const { multiSelect } = ctx.session.selectOptions || {};
    
    if (multiSelect) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
      ctx.session.selectItems = ctx.session.selectItems.map(item => {
        if (item.id === id) {
          return { ...item, selected: !item.selected };
        }
        return item;
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º
      const selectButtons = ctx.session.selectItems.map(item => {
        const prefix = item.selected ? '‚úÖ ' : '‚ùå ';
        return [Markup.button.callback(`${prefix}${item.name}`, `select_${item.id}`)];
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      selectButtons.push([Markup.button.callback('‚úÖ –ì–æ—Ç–æ–≤–æ', 'select_done')]);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
      const universalKeyboard = createUniversalKeyboard();
      selectButtons.push(...universalKeyboard.reply_markup.inline_keyboard);
      
      await ctx.editMessageReplyMarkup({ inline_keyboard: selectButtons });
    } else {
      // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
      const selectedItem = ctx.session.selectItems.find(item => item.id === id);
      
      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞
      if (ctx.session.onSelect && selectedItem) {
        await ctx.session.onSelect(selectedItem);
      }
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      ctx.session.waitingFor = null;
      ctx.session.selectItems = null;
      ctx.session.onSelect = null;
      ctx.session.selectOptions = null;
    }
    
    return true;
  }
  
  return false;
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {boolean} true, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 */
async function handleMediaUpload(ctx) {
  if (ctx.session.waitingFor !== InputTypes.MEDIA_UPLOAD) {
    return false;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
  if (ctx.message && ctx.message.photo && ctx.session.mediaTypes.includes('photo')) {
    const photo = ctx.message.photo[ctx.message.photo.length - 1];
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if (ctx.session.onUpload) {
      await ctx.session.onUpload({ type: 'photo', fileId: photo.file_id });
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onUpload = null;
    ctx.session.mediaTypes = null;
    
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
  if (ctx.message && ctx.message.video && ctx.session.mediaTypes.includes('video')) {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if (ctx.session.onUpload) {
      await ctx.session.onUpload({ type: 'video', fileId: ctx.message.video.file_id });
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onUpload = null;
    ctx.session.mediaTypes = null;
    
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ
  if (ctx.message && ctx.message.audio && ctx.session.mediaTypes.includes('audio')) {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if (ctx.session.onUpload) {
      await ctx.session.onUpload({ type: 'audio', fileId: ctx.message.audio.file_id });
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onUpload = null;
    ctx.session.mediaTypes = null;
    
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  if (ctx.message && ctx.message.document && ctx.session.mediaTypes.includes('document')) {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if (ctx.session.onUpload) {
      await ctx.session.onUpload({ type: 'document', fileId: ctx.message.document.file_id });
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onUpload = null;
    ctx.session.mediaTypes = null;
    
    return true;
  }
  
  return false;
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {boolean} true, –µ—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 */
async function handleConfirm(ctx) {
  if (ctx.session.waitingFor !== InputTypes.CONFIRM) {
    return false;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'confirm') {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (ctx.session.onConfirm) {
      await ctx.session.onConfirm();
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onConfirm = null;
    ctx.session.onCancel = null;
    ctx.session.onBack = null;
    
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'cancel') {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–º–µ–Ω—ã
    if (ctx.session.onCancel) {
      await ctx.session.onCancel();
    } else {
      await ctx.reply('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onConfirm = null;
    ctx.session.onCancel = null;
    ctx.session.onBack = null;
    
    return true;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
  if (ctx.callbackQuery && ctx.callbackQuery.data === 'back') {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    if (ctx.session.onBack) {
      await ctx.session.onBack();
    } else {
      await ctx.reply('üîô –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É.');
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onConfirm = null;
    ctx.session.onCancel = null;
    ctx.session.onBack = null;
    
    return true;
  }
  
  return false;
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {boolean} true, –µ—Å–ª–∏ –≤–≤–æ–¥ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 */
async function handleTextInput(ctx) {
  if (ctx.session.waitingFor !== InputTypes.TEXT_INPUT) {
    return false;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
  if (ctx.message && ctx.message.text) {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞
    if (ctx.session.onInput) {
      await ctx.session.onInput(ctx.message.text);
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.waitingFor = null;
    ctx.session.onInput = null;
    
    return true;
  }
  
  return false;
}

/**
 * Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–≤–æ–¥–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param {Function} next - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
 * @returns {Promise} –ü—Ä–æ–º–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞
 */
async function inputMiddleware(ctx, next) {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
  if (await handleUniversalButtons(ctx)) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
  if (await handleNumInput(ctx)) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
  if (await handleSelect(ctx)) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
  if (await handleMediaUpload(ctx)) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  if (await handleConfirm(ctx)) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
  if (await handleTextInput(ctx)) {
    return;
  }
  
  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
  return next();
}

module.exports = {
  InputTypes,
  createUniversalKeyboard,
  createTextInput,
  createNumInput,
  createSelect,
  createMediaUpload,
  createConfirm,
  createSubmit,
  createRedirect,
  handleUniversalButtons,
  handleNumInput,
  handleSelect,
  handleMediaUpload,
  handleConfirm,
  handleTextInput,
  inputMiddleware
};
