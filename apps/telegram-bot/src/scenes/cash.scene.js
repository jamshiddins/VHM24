/**
 * FSM: cash_fsm
 * –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –£—á—ë—Ç –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ –∏ —Å–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–Ω–æ—Å—Ç–∏.
 * –†–æ–ª–∏: –û–ø–µ—Ä–∞—Ç–æ—Ä (–≤–≤–æ–¥), –ú–µ–Ω–µ–¥–∂–µ—Ä (–ø—Ä–æ–≤–µ—Ä–∫–∞).
 * –°–æ—Å—Ç–æ—è–Ω–∏—è:
 *   - cash_select_machine: –≤—ã–±–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∞
 *   - cash_input_amount: –≤–≤–æ–¥ —Å—É–º–º—ã –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
 *   - cash_upload_photo: –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ —á–µ–∫–∞/–∫—É–ø—é—Ä
 *   - cash_confirm: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
 *   - cash_reconciliation_manager: —Å–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
 */

const { Scenes, Markup } = require('telegraf');
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();
const states = require('../states');

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã
const scene = new Scenes.BaseScene('cash_fsm');

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
scene.use(async (ctx, next) => {
  console.log(`[cash_fsm] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ ${ctx.session.state || '–Ω–∞—á–∞–ª–æ'}`);
  return next();
});

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
scene.use(async (ctx, next) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å ADMIN, MANAGER –∏–ª–∏ OPERATOR
  if (!ctx.session.user || !['ADMIN', 'MANAGER', 'OPERATOR'].includes(ctx.session.user.role)) {
    await ctx.reply('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É—á–µ—Ç—É –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏.');
    return await ctx.scene.leave();
  }
  return next();
});

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É
scene.enter(async (ctx) => {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    ctx.session.cashData = {
      machineId: null,
      amount: 0,
      photo: null,
      notes: null,
      reconciled: false,
      reconciledBy: null,
      reconciledAt: null
    };
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    ctx.session.state = 'cash_select_machine';
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –∞–≤—Ç–æ–º–∞—Ç–∞
    await handleCashSelectMachine(ctx);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å—Ü–µ–Ω—É cash_fsm:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è cash_select_machine
async function handleCashSelectMachine(ctx) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–æ–≤
    const machines = await prisma.machine.findMany({
      where: { status: 'ACTIVE' },
      include: { location: true },
      orderBy: { internalCode: 'asc' }
    });
    
    if (machines.length === 0) {
      await ctx.reply('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–æ–≤. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é.');
      return await ctx.scene.leave();
    }
    
    const message = `
üí∞ –£—á–µ—Ç –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏

–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç –¥–ª—è –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:
`;
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∞–≤—Ç–æ–º–∞—Ç–∞–º–∏
    const buttons = machines.map(machine => {
      const locationName = machine.location ? machine.location.name : '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏';
      return [Markup.button.callback(
        `${machine.internalCode} - ${locationName}`,
        `machine_${machine.id}`
      )];
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    buttons.push([Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')]);
    
    const keyboard = Markup.inlineKeyboard(buttons);
    
    await ctx.reply(message, keyboard);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∞–≤—Ç–æ–º–∞—Ç–∞:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∞
scene.action(/^machine_(.+)$/, async (ctx) => {
  try {
    const machineId = ctx.match[1];
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∞–≤—Ç–æ–º–∞—Ç–∞
    ctx.session.cashData.machineId = machineId;
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–∞—Ç–µ
    const machine = await prisma.machine.findUnique({
      where: { id: machineId },
      include: { location: true }
    });
    
    if (!machine) {
      await ctx.reply('‚ùå –ê–≤—Ç–æ–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      return await handleCashSelectMachine(ctx);
    }
    
    const locationName = machine.location ? machine.location.name : '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏';
    await ctx.editMessageText(`–í—ã–±—Ä–∞–Ω –∞–≤—Ç–æ–º–∞—Ç: ${machine.internalCode} - ${locationName}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é –¥–ª—è —ç—Ç–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞
    const lastCash = await prisma.cash.findFirst({
      where: { machineId: machineId },
      orderBy: { createdAt: 'desc' }
    });
    
    if (lastCash) {
      const lastCashDate = lastCash.createdAt.toLocaleDateString('ru-RU');
      const lastCashAmount = lastCash.amount;
      
      await ctx.reply(`
‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:

üìÖ –î–∞—Ç–∞: ${lastCashDate}
üí∞ –°—É–º–º–∞: ${lastCashAmount} —Ä—É–±.
`);
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É —Å—É–º–º—ã –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    ctx.session.state = 'cash_input_amount';
    await handleCashInputAmount(ctx);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∞:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è cash_input_amount
async function handleCashInputAmount(ctx) {
  try {
    await ctx.reply(`
üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ (–≤ —Ä—É–±–ª—è—Ö):
`);
    
    // –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ —Å—É–º–º—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—É–º–º—ã –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
scene.on('text', async (ctx) => {
  if (ctx.session.state === 'cash_input_amount') {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—É–º–º—É
      const amount = parseFloat(ctx.message.text.trim().replace(',', '.'));
      
      if (isNaN(amount) || amount < 0) {
        return await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (—Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö).');
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É
      ctx.session.cashData.amount = amount;
      
      await ctx.reply(`‚úÖ –°—É–º–º–∞ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ (${amount} —Ä—É–±.) —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.`);
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ
      ctx.session.state = 'cash_upload_photo';
      await handleCashUploadPhoto(ctx);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      await ctx.scene.leave();
    }
  } else if (ctx.session.state === 'cash_input_notes') {
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
      ctx.session.cashData.notes = ctx.message.text.trim();
      
      await ctx.reply('‚úÖ –ü—Ä–∏–º–µ—á–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
      ctx.session.state = 'cash_confirm';
      await handleCashConfirm(ctx);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–≤–æ–¥–∞ –ø—Ä–∏–º–µ—á–∞–Ω–∏–π:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      await ctx.scene.leave();
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è cash_upload_photo
async function handleCashUploadPhoto(ctx) {
  try {
    await ctx.reply(`
üì∏ –§–æ—Ç–æ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏–ª–∏ –∫—É–ø—é—Ä.
–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥.
`);
    
    // –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ctx.session.state = 'cash_wait_photo';
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ñ–æ—Ç–æ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
scene.on('photo', async (ctx) => {
  if (ctx.session.state === 'cash_wait_photo') {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID —Ñ–æ—Ç–æ
      const photoId = ctx.message.photo[ctx.message.photo.length - 1].file_id;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ñ–æ—Ç–æ
      ctx.session.cashData.photo = photoId;
      
      await ctx.reply('‚úÖ –§–æ—Ç–æ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–æ.');
      
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
      await ctx.reply(`
üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è

–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /skip, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥:
`);
      
      // –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –ø—Ä–∏–º–µ—á–∞–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      ctx.session.state = 'cash_input_notes';
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      await ctx.scene.leave();
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ —Ñ–æ—Ç–æ
scene.command('skip', async (ctx) => {
  if (ctx.session.state === 'cash_wait_photo') {
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
    await ctx.reply(`
üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è

–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /skip, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥:
`);
    
    // –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –ø—Ä–∏–º–µ—á–∞–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ctx.session.state = 'cash_input_notes';
  } else if (ctx.session.state === 'cash_input_notes') {
    ctx.session.cashData.notes = null;
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
    ctx.session.state = 'cash_confirm';
    await handleCashConfirm(ctx);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è cash_confirm
async function handleCashConfirm(ctx) {
  try {
    const cashData = ctx.session.cashData;
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–∞—Ç–µ
    const machine = await prisma.machine.findUnique({
      where: { id: cashData.machineId },
      include: { location: true }
    });
    
    if (!machine) {
      await ctx.reply('‚ùå –ê–≤—Ç–æ–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      return await handleCashSelectMachine(ctx);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    let confirmText = `
üí∞ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏

üîπ –ê–≤—Ç–æ–º–∞—Ç: ${machine.internalCode} - ${machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cashData.amount} —Ä—É–±.
üîπ –î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}
`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (cashData.notes) {
      confirmText += `\nüìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: ${cashData.notes}\n`;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm_cash')],
      [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')]
    ]);
    
    await ctx.reply(confirmText, keyboard);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
scene.action('confirm_cash', async (ctx) => {
  try {
    const cashData = ctx.session.cashData;
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const cash = await prisma.cash.create({
      data: {
        machineId: cashData.machineId,
        amount: cashData.amount,
        photo: cashData.photo,
        notes: cashData.notes,
        userId: ctx.session.user.id,
        createdAt: new Date(),
        reconciled: false
      }
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
      const managers = await prisma.user.findMany({
        where: { 
          role: { in: ['ADMIN', 'MANAGER'] },
          status: 'ACTIVE'
        },
        select: { telegramId: true }
      });
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–∞—Ç–µ
      const machine = await prisma.machine.findUnique({
        where: { id: cashData.machineId },
        include: { location: true }
      });
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      const notificationText = `
üí∞ –ù–æ–≤–∞—è –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—è!

üîπ ID: ${cash.id}
üîπ –ê–≤—Ç–æ–º–∞—Ç: ${machine.internalCode} - ${machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cashData.amount} —Ä—É–±.
üîπ –û–ø–µ—Ä–∞—Ç–æ—Ä: ${ctx.session.user.firstName} ${ctx.session.user.lastName || ''}
üîπ –î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}

–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–≤–µ—Ä–∫–∞.
`;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É
      for (const manager of managers) {
        if (manager.telegramId) {
          await ctx.telegram.sendMessage(manager.telegramId, notificationText);
        }
      }
    } catch (notificationError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º:', notificationError);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    await ctx.editMessageText(`
‚úÖ –ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!

üîπ ID: ${cash.id}
üîπ –°—É–º–º–∞: ${cashData.amount} —Ä—É–±.
üîπ –î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}

–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –ø–æ–ª—É—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–≤–µ—Ä–∫–∏.
`);
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –º–µ–Ω–µ–¥–∂–µ—Ä, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–≤–µ—Ä–∫—É
    if (['ADMIN', 'MANAGER'].includes(ctx.session.user.role)) {
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–≤–µ—Ä–∫—É', `reconcile_${cash.id}`)],
        [Markup.button.callback('üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é', 'cash_another')],
        [Markup.button.callback('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]
      ]);
      
      await ctx.reply('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', keyboard);
    } else {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –æ–ø–µ—Ä–∞—Ç–æ—Ä, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é', 'cash_another')],
        [Markup.button.callback('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]
      ]);
      
      await ctx.reply('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', keyboard);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–≤–µ—Ä–∫–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
scene.action(/^reconcile_(.+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –Ω–∞ —Å–≤–µ—Ä–∫—É
    if (!['ADMIN', 'MANAGER'].includes(ctx.session.user.role)) {
      await ctx.answerCbQuery('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–≤–µ—Ä–∫—É –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏.');
      return;
    }
    
    const cashId = ctx.match[1];
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    const cash = await prisma.cash.findUnique({
      where: { id: cashId },
      include: {
        machine: {
          include: { location: true }
        },
        user: true
      }
    });
    
    if (!cash) {
      await ctx.answerCbQuery('‚ùå –ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }
    
    // –ï—Å–ª–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—è —É–∂–µ —Å–≤–µ—Ä–µ–Ω–∞, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
    if (cash.reconciled) {
      await ctx.answerCbQuery('‚ÑπÔ∏è –≠—Ç–∞ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—è —É–∂–µ —Å–≤–µ—Ä–µ–Ω–∞.');
      return;
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–≤–µ—Ä–∫–µ
    ctx.session.state = 'cash_reconciliation_manager';
    ctx.session.cashData.cashId = cashId;
    
    await ctx.editMessageText(`
üí∞ –°–≤–µ—Ä–∫–∞ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ #${cash.id}

üîπ –ê–≤—Ç–æ–º–∞—Ç: ${cash.machine.internalCode} - ${cash.machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cash.amount} —Ä—É–±.
üîπ –û–ø–µ—Ä–∞—Ç–æ—Ä: ${cash.user.firstName} ${cash.user.lastName || ''}
üîπ –î–∞—Ç–∞: ${cash.createdAt.toLocaleDateString('ru-RU')}

–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–µ—Ä–∫—É –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:
`, Markup.inlineKeyboard([
      [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–µ—Ä–∫—É', `confirm_reconcile_${cashId}`)],
      [Markup.button.callback('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', `reject_reconcile_${cashId}`)],
      [Markup.button.callback('üîô –ù–∞–∑–∞–¥', 'back_from_reconcile')]
    ]));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤–µ—Ä–∫–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–≤–µ—Ä–∫–∏
scene.action(/^confirm_reconcile_(.+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –Ω–∞ —Å–≤–µ—Ä–∫—É
    if (!['ADMIN', 'MANAGER'].includes(ctx.session.user.role)) {
      await ctx.answerCbQuery('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–≤–µ—Ä–∫—É –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏.');
      return;
    }
    
    const cashId = ctx.match[1];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    await prisma.cash.update({
      where: { id: cashId },
      data: {
        reconciled: true,
        reconciledById: ctx.session.user.id,
        reconciledAt: new Date()
      }
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    const cash = await prisma.cash.findUnique({
      where: { id: cashId },
      include: {
        machine: {
          include: { location: true }
        },
        user: true
      }
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É
    try {
      if (cash.user.telegramId) {
        const notificationText = `
‚úÖ –ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è #${cash.id} —Å–≤–µ—Ä–µ–Ω–∞!

üîπ –ê–≤—Ç–æ–º–∞—Ç: ${cash.machine.internalCode} - ${cash.machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cash.amount} —Ä—É–±.
üîπ –î–∞—Ç–∞: ${cash.createdAt.toLocaleDateString('ru-RU')}
üîπ –°–≤–µ—Ä–∏–ª: ${ctx.session.user.firstName} ${ctx.session.user.lastName || ''}
`;
        
        await ctx.telegram.sendMessage(cash.user.telegramId, notificationText);
      }
    } catch (notificationError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:', notificationError);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    }
    
    await ctx.editMessageText(`
‚úÖ –ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è #${cash.id} —É—Å–ø–µ—à–Ω–æ —Å–≤–µ—Ä–µ–Ω–∞!

üîπ –ê–≤—Ç–æ–º–∞—Ç: ${cash.machine.internalCode} - ${cash.machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cash.amount} —Ä—É–±.
üîπ –û–ø–µ—Ä–∞—Ç–æ—Ä: ${cash.user.firstName} ${cash.user.lastName || ''}
üîπ –î–∞—Ç–∞: ${cash.createdAt.toLocaleDateString('ru-RU')}
`);
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é', 'cash_another')],
      [Markup.button.callback('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]
    ]);
    
    await ctx.reply('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', keyboard);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —Å–≤–µ—Ä–∫–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Å–≤–µ—Ä–∫–∏
scene.action(/^reject_reconcile_(.+)$/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –Ω–∞ —Å–≤–µ—Ä–∫—É
    if (!['ADMIN', 'MANAGER'].includes(ctx.session.user.role)) {
      await ctx.answerCbQuery('‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–≤–µ—Ä–∫—É –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏.');
      return;
    }
    
    const cashId = ctx.match[1];
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
    const cash = await prisma.cash.findUnique({
      where: { id: cashId },
      include: {
        machine: {
          include: { location: true }
        },
        user: true
      }
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É
    try {
      if (cash.user.telegramId) {
        const notificationText = `
‚ùå –ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è #${cash.id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!

üîπ –ê–≤—Ç–æ–º–∞—Ç: ${cash.machine.internalCode} - ${cash.machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cash.amount} —Ä—É–±.
üîπ –î–∞—Ç–∞: ${cash.createdAt.toLocaleDateString('ru-RU')}
üîπ –û—Ç–∫–ª–æ–Ω–∏–ª: ${ctx.session.user.firstName} ${ctx.session.user.lastName || ''}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.
`;
        
        await ctx.telegram.sendMessage(cash.user.telegramId, notificationText);
      }
    } catch (notificationError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:', notificationError);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    }
    
    await ctx.editMessageText(`
‚ùå –ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è #${cash.id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.

üîπ –ê–≤—Ç–æ–º–∞—Ç: ${cash.machine.internalCode} - ${cash.machine.location?.name || '–ë–µ–∑ –ª–æ–∫–∞—Ü–∏–∏'}
üîπ –°—É–º–º–∞: ${cash.amount} —Ä—É–±.
üîπ –û–ø–µ—Ä–∞—Ç–æ—Ä: ${cash.user.firstName} ${cash.user.lastName || ''}
üîπ –î–∞—Ç–∞: ${cash.createdAt.toLocaleDateString('ru-RU')}

–û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏.
`);
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é', 'cash_another')],
      [Markup.button.callback('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]
    ]);
    
    await ctx.reply('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', keyboard);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ —Å–≤–µ—Ä–∫–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Å–≤–µ—Ä–∫–∏
scene.action('back_from_reconcile', async (ctx) => {
  try {
    await ctx.editMessageText('üîô –í–æ–∑–≤—Ä–∞—Ç –∏–∑ —Å–≤–µ—Ä–∫–∏ –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏.');
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∫–∞—Å—Å–∞—Ü–∏—é', 'cash_another')],
      [Markup.button.callback('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_menu')]
    ]);
    
    await ctx.reply('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?', keyboard);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∏–∑ —Å–≤–µ—Ä–∫–∏:', error);
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    await ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
scene.action('cancel', async (ctx) => {
  await ctx.editMessageText('‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
  await ctx.scene.leave();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –µ—â–µ –æ–¥–Ω–æ–π –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏
scene.action('cash_another', async (ctx) => {
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
  ctx.session.cashData = {
    machineId: null,
    amount: 0,
    photo: null,
    notes: null,
    reconciled: false,
    reconciledBy: null,
    reconciledAt: null
  };
  
  ctx.session.state = 'cash_select_machine';
  await ctx.editMessageText('üí∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –∏–Ω–∫–∞—Å—Å–∞—Ü–∏–∏...');
  await handleCashSelectMachine(ctx);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
scene.action('back_to_menu', async (ctx) => {
  await ctx.editMessageText('üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...');
  await ctx.scene.enter('main_menu_fsm');
});

module.exports = scene;
