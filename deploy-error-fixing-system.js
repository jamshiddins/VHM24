#!/usr/bin/env node

/**
 * VHM24 - –î–µ–ø–ª–æ–π —Å–∏—Å—Ç–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
 *
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–ø–ª–æ–π —Å–∏—Å—Ç–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ VHM24.
 * –û–Ω –∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –≤ –Ω—É–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É.
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node deploy-error-fixing-system.js
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
function confirm(message) {
  return new Promise(resolve => {
    rl.question(`${colors.yellow}${message} (y/n): ${colors.reset}`, answer => {
      resolve(answer.toLowerCase() === 'y');
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
function ensureDirectoryExists(dir) {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
    log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`, 'green');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function copyFile(source, destination) {
  try {
    fs.copyFileSync(source, destination);
    log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: ${destination}`, 'green');
    return true;
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${source}: ${error.message}`, 'red');
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è —Å–∏—Å—Ç–µ–º—ã
async function deploySystem() {
  log('\nüöÄ VHM24 - –î–ï–ü–õ–û–ô –°–ò–°–¢–ï–ú–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–®–ò–ë–û–ö üöÄ\n', 'bright');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
  const requiredFiles = [
    'scripts/project-analyzer.js',
    'scripts/auto-fixer.js',
    'scripts/test-after-fixes.js',
    'fix-all-errors.js',
    'setup-error-fixing-system.js',
    'VHM24_FIX_CHECKLIST.md',
    'VHM24_ERROR_FIXING_SYSTEM.md',
    'QUICK_START_ERROR_FIXING.md',
    'VHM24_ERROR_FIXING_EXAMPLES.md',
    'packages/shared/logger/index.js'
  ];

  const missingFiles = requiredFiles.filter(file => !fs.existsSync(file));

  if (missingFiles.length > 0) {
    log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã:', 'red');
    missingFiles.forEach(file => log(`  - ${file}`, 'red'));

    const continueAnyway = await confirm(
      '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ñ–∞–π–ª–æ–≤?'
    );
    if (!continueAnyway) {
      log('\nüõë –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω.', 'yellow');
      rl.close();
      return;
    }
  }

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è
  const deployDir = path.join(process.cwd(), 'deploy');
  ensureDirectoryExists(deployDir);

  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  const directories = ['scripts', 'packages/shared/logger', 'docs'];

  directories.forEach(dir => {
    ensureDirectoryExists(path.join(deployDir, dir));
  });

  // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
  const filesToCopy = [
    {
      source: 'scripts/project-analyzer.js',
      destination: 'deploy/scripts/project-analyzer.js'
    },
    {
      source: 'scripts/auto-fixer.js',
      destination: 'deploy/scripts/auto-fixer.js'
    },
    {
      source: 'scripts/test-after-fixes.js',
      destination: 'deploy/scripts/test-after-fixes.js'
    },
    { source: 'fix-all-errors.js', destination: 'deploy/fix-all-errors.js' },
    {
      source: 'setup-error-fixing-system.js',
      destination: 'deploy/setup-error-fixing-system.js'
    },
    {
      source: 'VHM24_FIX_CHECKLIST.md',
      destination: 'deploy/docs/VHM24_FIX_CHECKLIST.md'
    },
    {
      source: 'VHM24_ERROR_FIXING_SYSTEM.md',
      destination: 'deploy/docs/VHM24_ERROR_FIXING_SYSTEM.md'
    },
    {
      source: 'QUICK_START_ERROR_FIXING.md',
      destination: 'deploy/docs/QUICK_START_ERROR_FIXING.md'
    },
    {
      source: 'VHM24_ERROR_FIXING_EXAMPLES.md',
      destination: 'deploy/docs/VHM24_ERROR_FIXING_EXAMPLES.md'
    },
    {
      source: 'packages/shared/logger/index.js',
      destination: 'deploy/packages/shared/logger/index.js'
    }
  ];

  let allCopied = true;

  filesToCopy.forEach(({ source, destination }) => {
    if (fs.existsSync(source)) {
      const copied = copyFile(source, destination);
      if (!copied) {
        allCopied = false;
      }
    } else {
      log(`‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${source}`, 'red');
      allCopied = false;
    }
  });

  // –°–æ–∑–¥–∞–µ–º package.json –¥–ª—è –¥–µ–ø–ª–æ—è
  const packageJson = {
    name: 'vhm24-error-fixing-system',
    version: '1.0.0',
    description: '–°–∏—Å—Ç–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ VHM24',
    main: 'fix-all-errors.js',
    scripts: {
      analyze: 'node scripts/project-analyzer.js',
      fix: 'node scripts/auto-fixer.js',
      'test-fixes': 'node scripts/test-after-fixes.js',
      'fix-all': 'node fix-all-errors.js',
      setup: 'node setup-error-fixing-system.js'
    },
    dependencies: {
      glob: '^10.3.10',
      'node-fetch': '^3.3.2',
      tap: '^18.5.0',
      pino: '^8.16.0',
      fastify: '^4.24.0',
      '@fastify/jwt': '^7.2.4'
    },
    author: 'VHM24 Team',
    license: 'MIT'
  };

  fs.writeFileSync(
    path.join(deployDir, 'package.json'),
    JSON.stringify(packageJson, null, 2)
  );
  log('‚úÖ –°–æ–∑–¥–∞–Ω package.json', 'green');

  // –°–æ–∑–¥–∞–µ–º README.md –¥–ª—è –¥–µ–ø–ª–æ—è
  const readme = `# VHM24 –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫

## –û–±–∑–æ—Ä

–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –≤ –ø—Ä–æ–µ–∫—Ç–µ VHM24.

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

\`\`\`bash
npm install
npm run setup
\`\`\`

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

\`\`\`bash
# –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
npm run fix-all

# –ü–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å
npm run analyze   # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
npm run fix       # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
npm run test-fixes # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
\`\`\`

## –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ \`docs\`.
`;

  fs.writeFileSync(path.join(deployDir, 'README.md'), readme);
  log('‚úÖ –°–æ–∑–¥–∞–Ω README.md', 'green');

  // –°–æ–∑–¥–∞–µ–º .gitignore –¥–ª—è –¥–µ–ø–ª–æ—è
  const gitignore = `node_modules/
.DS_Store
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
coverage/
dist/
build/
.idea/
.vscode/
*.sublime-project
*.sublime-workspace
.project
.classpath
.c9/
*.launch
.settings/
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
.vercel
.next/
out/
backup.json
analysis-report.json
fix-report.json
`;

  fs.writeFileSync(path.join(deployDir, '.gitignore'), gitignore);
  log('‚úÖ –°–æ–∑–¥–∞–Ω .gitignore', 'green');

  // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–Ω–µ—à–Ω–∏—Ö –∫–æ–º–∞–Ω–¥)
  try {
    log('\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...', 'cyan');

    const archiveName = `vhm24-error-fixing-system-${new Date().toISOString().split('T')[0]}`;

    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞—Ä—Ö–∏–≤–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const archiveDir = path.join(process.cwd(), archiveName);
    ensureDirectoryExists(archiveDir);

    // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ deploy –≤ –∞—Ä—Ö–∏–≤–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    const copyDirRecursive = (src, dest) => {
      const entries = fs.readdirSync(src, { withFileTypes: true });

      entries.forEach(entry => {
        const srcPath = path.join(src, entry.name);
        const destPath = path.join(dest, entry.name);

        if (entry.isDirectory()) {
          ensureDirectoryExists(destPath);
          copyDirRecursive(srcPath, destPath);
        } else {
          fs.copyFileSync(srcPath, destPath);
        }
      });
    };

    copyDirRecursive(deployDir, archiveDir);

    log(`\n‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${archiveName}`, 'green');
    log(`üìÅ –ü—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É: ${archiveDir}`, 'green');
  } catch (error) {
    log(`\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞: ${error.message}`, 'red');
  }

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
  if (allCopied) {
    log('\nüéâ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!', 'bright');
    log(`üìÅ –í—Å–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${deployDir}`, 'green');
  } else {
    log('\n‚ö†Ô∏è –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–ê–ú–ò!', 'yellow');
    log('–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.', 'yellow');
  }

  rl.close();
}

// –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è
deploySystem().catch(error => {
  log(`\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`, 'red');
  rl.close();
});
