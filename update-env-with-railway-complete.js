const fs = require('fs');
const path = require('path');

// –î–∞–Ω–Ω—ã–µ –∏–∑ Railway
const railwayData = {
    DATABASE_URL: 'postgresql://postgres:LxeIDWcsIbMSPcVZiKXmIKqFnDQGaXHR@postgres.railway.internal:5432/railway',
    REDIS_URL: 'redis://default:UBhuXXUjFDisRLBNOsoVNIaGHboCRPll@redis.railway.internal:6379',
    JWT_SECRET: '933f4234d58f69c74957860bf5a7a838e7c6f51f36876e5d415842bd796d6b5e',
    TELEGRAM_BOT_TOKEN: '8015112367:AAHi25gHhI3p1X1uyuCAt8vUnlMZRrcoKEQ',
    ADMIN_IDS: '42283329',
    S3_ACCESS_KEY: 'DO00XEB6BC6XZ8Q2M4KQ',
    S3_BUCKET: 'vhm24-uploads',
    S3_BACKUP_BUCKET: 'vhm24-backups',
    S3_ENDPOINT: 'https://fra1.digitaloceanspaces.com',
    NODE_ENV: 'production',
    PORT: '8000',
    RAILWAY_PUBLIC_DOMAIN: 'web-production-73916.up.railway.app'
};

function updateEnvFile() {
    console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ Railway...\n');

    const envPath = path.join(__dirname, '.env');
    let envContent = '';
    
    // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª
    if (fs.existsSync(envPath)) {
        envContent = fs.readFileSync(envPath, 'utf8');
        console.log('‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω');
    } else {
        console.log('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª');
    }

    const lines = envContent.split('\n').filter(line => line.trim() !== '');
    const updatedLines = [];
    const processedKeys = new Set();

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    for (const line of lines) {
        const [key] = line.split('=');
        if (key && railwayData[key]) {
            updatedLines.push(`${key}="${railwayData[key]}"`);
            processedKeys.add(key);
            console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${key}`);
        } else {
            updatedLines.push(line);
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    for (const [key, value] of Object.entries(railwayData)) {
        if (!processedKeys.has(key)) {
            updatedLines.push(`${key}="${value}"`);
            console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ: ${key}`);
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    const additionalVars = {
        'S3_SECRET_KEY': 'PLACEHOLDER_SECRET_KEY',
        'S3_REGION': 'fra1',
        'WEBHOOK_SECRET': 'your_webhook_secret_here',
        'API_BASE_URL': `https://${railwayData.RAILWAY_PUBLIC_DOMAIN}`,
        'FRONTEND_URL': `https://${railwayData.RAILWAY_PUBLIC_DOMAIN}`,
        'CORS_ORIGIN': `https://${railwayData.RAILWAY_PUBLIC_DOMAIN}`
    };

    for (const [key, value] of Object.entries(additionalVars)) {
        const exists = updatedLines.some(line => line.startsWith(`${key}=`));
        if (!exists) {
            updatedLines.push(`${key}="${value}"`);
            console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ): ${key}`);
        }
    }

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(envPath, updatedLines.join('\n') + '\n');
    console.log('\n‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    console.log('\nüìã –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env:');
    console.log('=' * 50);
    console.log(fs.readFileSync(envPath, 'utf8'));
    console.log('=' * 50);

    // –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ —Ñ–∞–π–ª –¥–ª—è Telegram –±–æ—Ç–∞
    const telegramEnvPath = path.join(__dirname, 'apps', 'telegram-bot', '.env');
    const telegramEnvContent = [
        `TELEGRAM_BOT_TOKEN="${railwayData.TELEGRAM_BOT_TOKEN}"`,
        `API_BASE_URL="https://${railwayData.RAILWAY_PUBLIC_DOMAIN}"`,
        `ADMIN_IDS="${railwayData.ADMIN_IDS}"`,
        `NODE_ENV="${railwayData.NODE_ENV}"`
    ].join('\n') + '\n';

    try {
        fs.writeFileSync(telegramEnvPath, telegramEnvContent);
        console.log('‚úÖ –§–∞–π–ª apps/telegram-bot/.env –æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å apps/telegram-bot/.env:', error.message);
    }

    console.log('\nüéâ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ S3_SECRET_KEY –≤ .env —Ñ–∞–π–ª–µ');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ Prisma');
    console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateEnvFile();
