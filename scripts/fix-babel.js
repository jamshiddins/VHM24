const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîß –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Babel...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function runCommand(command, options = {}) {
  console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: ${command}`);
  try {
    const output = execSync(command, { encoding: 'utf8', ...options });
    console.log(output);
    return output;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: ${command}`);
    console.error(error.message);
    if (error.stdout) console.log(error.stdout.toString());
    if (error.stderr) console.error(error.stderr.toString());
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞
function checkFileExists(filePath) {
  return fs.existsSync(filePath);
}

// –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ babel.config.js
console.log('\nüìã –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ babel.config.js');
const babelConfigContent = `module.exports = {
  presets: [
    ['@babel/preset-env', { targets: { node: 'current' } }]
  ]
};
`;

fs.writeFileSync('babel.config.js', babelConfigContent);
console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω babel.config.js');

// –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ jest.config.js
console.log('\nüìã –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ jest.config.js');
if (checkFileExists('jest.config.js')) {
  const jestConfigContent = `module.exports = {
  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],
  testEnvironment: 'node',
  testMatch: ['**/*.test.js'],
  collectCoverage: true,
  coverageDirectory: 'coverage',
  collectCoverageFrom: [
    'services/**/*.js',
    'packages/**/*.js',
    '!**/node_modules/**',
    '!**/vendor/**'
  ],
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
  testTimeout: 30000,
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º node_modules
  transformIgnorePatterns: [
    '/node_modules/(?!(fast-jwt|canvas|skia-canvas)/)'
  ],
  // –ú–æ–∫–∞–µ–º –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã
  moduleNameMapper: {
    '^canvas$': '<rootDir>/mocks/canvas.js',
    '^skia-canvas$': '<rootDir>/mocks/canvas.js',
    '^fast-jwt$': '<rootDir>/mocks/jwt.js'
  },
  // –û—Ç–∫–ª—é—á–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
  transform: {}
};
`;

  fs.writeFileSync('jest.config.js', jestConfigContent);
  console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω jest.config.js');
} else {
  console.log('‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: jest.config.js');
}

// –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –±–µ–∑ Babel
console.log('\nüìã –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –±–µ–∑ Babel');
ensureDirectoryExists('tests/simple');

function ensureDirectoryExists(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dirPath}`);
    return true;
  }
  return false;
}

const simpleTestContent = `// tests/simple/simple.test.js
// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Babel

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö
function add(a, b) {
  return a + b;
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö
function subtract(a, b) {
  return a - b;
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö
function multiply(a, b) {
  return a * b;
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö
function divide(a, b) {
  if (b === 0) {
    throw new Error('Division by zero');
  }
  return a / b;
}

// –¢–µ—Å—Ç—ã
test('add works', function() {
  expect(add(1, 2)).toBe(3);
});

test('subtract works', function() {
  expect(subtract(5, 2)).toBe(3);
});

test('multiply works', function() {
  expect(multiply(2, 3)).toBe(6);
});

test('divide works', function() {
  expect(divide(6, 2)).toBe(3);
});

test('divide by zero throws', function() {
  expect(function() {
    divide(6, 0);
  }).toThrow('Division by zero');
});
`;

fs.writeFileSync('tests/simple/simple.test.js', simpleTestContent);
console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–µ–∑ Babel');

// –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
console.log('\nüìã –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
runCommand('npm install --no-save jest');

console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Babel –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑ Babel –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
console.log('npx jest tests/simple');
