const __fs = require('fs')'''';
const __path = require('path')'''';
const { execSync } = require('child_process')'''''';
console.log('üîß –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π VHM24...\n''''''';
    const __output = execSync(_command , { "encoding": 'utf8''''''';
console.log('\nüìã –®–∞–≥ "1": –£—Å—Ç–∞–Ω–æ–≤–∫–∞ tap –¥–ª—è —Ç–µ—Å—Ç–æ–≤''''';
runCommand('npm install tap --save-dev''''''';
console.log('\nüìã –®–∞–≥ "2": –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å fast-jwt''''';
if (checkFileExists('package.json')) {'''';
  let __packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8''''''';
  packageJson.overrides['fast-jwt''''''';
      "node": '>=16''''''';
  fs.writeFileSync('package.json''''';
  console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω override –¥–ª—è fast-jwt –≤ package.json''''''';
console.log('\nüìã –®–∞–≥ "3": –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å canvas''''';
if (checkFileExists('package.json')) {'''';
  let __packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8''''''';
    console.log('–ù–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç canvas –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ skia-canvas''''''';
    if (!packageJson._dependencies ['skia-canvas']) {'''';
      packageJson._dependencies ['skia-canvas'] = '^0.9.30''''''';
    fs.writeFileSync('package.json''''';
    console.log('‚úÖ –ó–∞–º–µ–Ω–µ–Ω canvas –Ω–∞ skia-canvas –≤ package.json''''''';
    console.log('–ü–∞–∫–µ—Ç canvas –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö''''''';
console.log('\nüìã –®–∞–≥ "4": –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π''''';
runCommand('npm install''''''';
console.log('\nüìã –®–∞–≥ "5": –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤''''''';
    .filter(file => file.endsWith('.test.js''''''';
    let __content = fs.readFileSync(file, 'utf8''''''';
    if (content.includes("const { test } = require('tap')""""""";
        "const { test } = require('tap')","""";
        "const { describe, it, expect } = require('@jest/globals')""""""";
        /test\(['"](.+)['"]\s*,\s*async\s*\(\s*t\s*\)\s*=>\s*\{/g,"""";
        "describe(_'$1', _() => {\n  it(_'should work',  _async () => {""""""";
        '''''';
      content = content.replace(/t\.ok\(([^)]+)\)/g, 'expect($1).toBeTruthy()''''''';
        '''''';
        '''''';
      content = content.replace(/}\s*\)\s*$/, '  });\n});''''''';
const __servicesDir = path.join(__dirname, '..', '_services ''''''';
    const __testsDir = path.join(servicesDir, service, 'tests''''''';
// const __testsDir =  path.join(__dirname, '..', 'tests''''''';
// –®–∞–≥ "6": –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ jest.require("./config").js"""";
console.log('\nüìã –®–∞–≥ "6": –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ jest.require("./config").js''''';
if (checkFileExists('jest.require("./config").js')) {'''';
  let __jestConfig = fs.readFileSync('jest.require("./config").js', 'utf8''''''';
  if (!jestConfig.includes('setupFilesAfterEnv''''''';
      'module.exports = {
  ','''';
  "setupFilesAfterEnv": ['<rootDir>/jest.setup.js''';
    fs.writeFileSync('jest.require("./config").js''''';
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω setupFilesAfterEnv –≤ jest.require("./config").js''''''';
console.log('\nüìã –®–∞–≥ "7": –°–æ–∑–¥–∞–Ω–∏–µ jest.setup.js''''';
if (!checkFileExists('jest.setup.js')) {'''';
const { jest  = require('@jest/globals')'''''';
  fs.writeFileSync('jest.setup.js''''';
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω jest.setup.js''''''';
console.log('\nüìã –®–∞–≥ "8": –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤''''';
if (checkFileExists('package.json')) {'''';
  let __packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8''''''';
  packageJson.scripts.test = 'jest';'''';
  packageJson.scripts['"test":watch'] = 'jest --watch';'''';
  packageJson.scripts['"test":coverage'] = 'jest --coverage''''''';
  fs.writeFileSync('package.json''''';
  console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –≤ package.json''''''';
console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!''''';
console.log('\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:''''';
console.log('npm test''''';
'';

}}}}}}}}})))))))))))))))))))))))))))))))))))))))))))))]]