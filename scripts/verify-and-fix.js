const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º VHM24...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∏ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function runCommand(command, options = {}) {
  console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: ${command}`);
  try {
    const output = execSync(command, { encoding: 'utf8', ...options });
    console.log(output);
    return output;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: ${command}`);
    console.error(error.message);
    if (error.stdout) console.log(error.stdout.toString());
    if (error.stderr) console.error(error.stderr.toString());
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞
function checkFileExists(filePath) {
  return fs.existsSync(filePath);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
function ensureDirectoryExists(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dirPath}`);
    return true;
  }
  return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É
function fixFilePermissions(filePath) {
  if (!checkFileExists(filePath)) {
    console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
    return false;
  }

  try {
    // –î–ª—è Linux/macOS
    if (process.platform !== 'win32') {
      fs.chmodSync(filePath, 0o755);
      console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è: ${filePath}`);
    }
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è: ${filePath}`);
    console.error(error.message);
    return false;
  }
}

// –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('\nüìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤');
const requiredFiles = [
  'scripts/fix-fast-jwt.js',
  'scripts/fix-canvas.js',
  'scripts/fix-dependencies.js',
  'Dockerfile.compatible',
  'docker-compose.compatible.yml',
  'run-in-docker.sh',
  'run-in-docker.bat',
  'run-all-fixes.sh',
  'run-all-fixes.bat',
  'run-all-fixes.ps1',
  'run-docker.ps1',
  'COMPATIBILITY_SOLUTION.md',
  'POWERSHELL_INSTRUCTIONS.md'
];

let missingFiles = [];
requiredFiles.forEach(file => {
  if (!checkFileExists(file)) {
    missingFiles.push(file);
    console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${file}`);
  }
});

// –®–∞–≥ 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
console.log('\nüìã –®–∞–≥ 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤');
const scriptFiles = [
  'run-in-docker.sh',
  'run-all-fixes.sh',
  'scripts/fix-fast-jwt.js',
  'scripts/fix-canvas.js',
  'scripts/fix-dependencies.js'
];

scriptFiles.forEach(file => {
  fixFilePermissions(file);
});

// –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ package.json
console.log('\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ package.json');
if (checkFileExists('package.json')) {
  let packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  let modified = false;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  packageJson.dependencies = packageJson.dependencies || {};
  packageJson.devDependencies = packageJson.devDependencies || {};

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ jsonwebtoken
  if (!packageJson.dependencies.jsonwebtoken) {
    packageJson.dependencies.jsonwebtoken = "^9.0.0";
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: jsonwebtoken');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ skia-canvas
  if (!packageJson.dependencies['skia-canvas']) {
    packageJson.dependencies['skia-canvas'] = "^0.9.30";
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: skia-canvas');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ jest
  if (!packageJson.devDependencies.jest) {
    packageJson.devDependencies.jest = "^29.5.0";
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: jest');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ @jest/globals
  if (!packageJson.devDependencies['@jest/globals']) {
    packageJson.devDependencies['@jest/globals'] = "^29.5.0";
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: @jest/globals');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
  packageJson.scripts = packageJson.scripts || {};

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
  if (!packageJson.scripts.test || packageJson.scripts.test !== 'jest') {
    packageJson.scripts.test = 'jest';
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç: test');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Docker
  if (!packageJson.scripts['docker:start']) {
    packageJson.scripts['docker:start'] = 'docker-compose -f docker-compose.compatible.yml up --build';
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç: docker:start');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
  if (!packageJson.scripts['docker:stop']) {
    packageJson.scripts['docker:stop'] = 'docker-compose -f docker-compose.compatible.yml down';
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç: docker:stop');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±–æ–ª–æ—á–∫–∏ Docker
  if (!packageJson.scripts['docker:shell']) {
    packageJson.scripts['docker:shell'] = 'docker-compose -f docker-compose.compatible.yml exec app sh';
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–∫—Ä–∏–ø—Ç: docker:shell');
    modified = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ engines
  if (!packageJson.engines) {
    packageJson.engines = {
      "node": ">=16 <22",
      "npm": ">=7"
    };
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã engines');
    modified = true;
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  if (modified) {
    fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
    console.log('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ package.json');
  } else {
    console.log('‚úÖ package.json –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π');
  }
} else {
  console.log('‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: package.json');
}

// –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Docker-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\nüìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Docker-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
if (checkFileExists('docker-compose.compatible.yml')) {
  let dockerComposeContent = fs.readFileSync('docker-compose.compatible.yml', 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è volume –¥–ª—è node_modules
  if (!dockerComposeContent.includes('/app/node_modules')) {
    console.log('‚ö†Ô∏è –í docker-compose.compatible.yml –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç volume –¥–ª—è node_modules');
    
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    dockerComposeContent = dockerComposeContent.replace(
      /volumes:\s*-\s*\.\/:\s*\/app/g,
      'volumes:\n      - ./:/app\n      - /app/node_modules'
    );
    
    fs.writeFileSync('docker-compose.compatible.yml', dockerComposeContent);
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω docker-compose.compatible.yml');
  } else {
    console.log('‚úÖ docker-compose.compatible.yml –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π');
  }
} else {
  console.log('‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: docker-compose.compatible.yml');
}

// –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .gitignore
console.log('\nüìã –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .gitignore');
if (checkFileExists('.gitignore')) {
  let gitignoreContent = fs.readFileSync('.gitignore', 'utf8');
  let modified = false;
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è node_modules
  if (!gitignoreContent.includes('node_modules')) {
    gitignoreContent += '\n# Dependency directories\nnode_modules/\n';
    modified = true;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env
  if (!gitignoreContent.includes('.env')) {
    gitignoreContent += '\n# Environment variables\n.env\n.env.*\n!.env.example\n';
    modified = true;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è coverage
  if (!gitignoreContent.includes('coverage')) {
    gitignoreContent += '\n# Coverage directory\ncoverage/\n';
    modified = true;
  }
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  if (modified) {
    fs.writeFileSync('.gitignore', gitignoreContent);
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω .gitignore');
  } else {
    console.log('‚úÖ .gitignore –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π');
  }
} else {
  console.log('‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: .gitignore');
}

// –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ jest.config.js
console.log('\nüìã –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ jest.config.js');
if (checkFileExists('jest.config.js')) {
  let jestConfigContent = fs.readFileSync('jest.config.js', 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è setupFilesAfterEnv
  if (!jestConfigContent.includes('setupFilesAfterEnv')) {
    jestConfigContent = jestConfigContent.replace(
      'module.exports = {',
      `module.exports = {
  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],`
    );
    
    fs.writeFileSync('jest.config.js', jestConfigContent);
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω jest.config.js');
  } else {
    console.log('‚úÖ jest.config.js –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π');
  }
} else {
  console.log('‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: jest.config.js');
  
  // –°–æ–∑–¥–∞–Ω–∏–µ jest.config.js
  const jestConfigContent = `module.exports = {
  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],
  testEnvironment: 'node',
  testMatch: ['**/*.test.js'],
  collectCoverage: true,
  coverageDirectory: 'coverage',
  collectCoverageFrom: [
    'services/**/*.js',
    'packages/**/*.js',
    '!**/node_modules/**',
    '!**/vendor/**'
  ]
};
`;
  
  fs.writeFileSync('jest.config.js', jestConfigContent);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω jest.config.js');
}

// –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ jest.setup.js
console.log('\nüìã –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ jest.setup.js');
if (!checkFileExists('jest.setup.js')) {
  const jestSetupContent = `// jest.setup.js
const { jest } = require('@jest/globals');

// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
jest.setTimeout(30000);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –º–æ–∫–∏
global.fetch = jest.fn();

// –û—á–∏—Å—Ç–∫–∞ –º–æ–∫–æ–≤ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
afterEach(() => {
  jest.clearAllMocks();
});
`;
  
  fs.writeFileSync('jest.setup.js', jestSetupContent);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω jest.setup.js');
} else {
  console.log('‚úÖ jest.setup.js —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}

// –®–∞–≥ 8: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
console.log('\nüìã –®–∞–≥ 8: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤');
if (missingFiles.length > 0) {
  console.log(`–°–æ–∑–¥–∞–Ω–∏–µ ${missingFiles.length} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤...`);
  
  // –°–æ–∑–¥–∞–Ω–∏–µ scripts/fix-fast-jwt.js
  if (missingFiles.includes('scripts/fix-fast-jwt.js')) {
    ensureDirectoryExists('scripts');
    const fixFastJwtContent = `const fs = require('fs');
const path = require('path');
const glob = require('glob');

console.log('üîÑ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ fast-jwt...');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è glob
try {
  require.resolve('glob');
} catch (e) {
  console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ glob...');
  require('child_process').execSync('npm install glob', { stdio: 'inherit' });
  console.log('‚úÖ –ü–∞–∫–µ—Ç glob —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ JS —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ
console.log('üîç –ü–æ–∏—Å–∫ JS —Ñ–∞–π–ª–æ–≤...');
const jsFiles = glob.sync('**/*.js', {
  ignore: [
    'node_modules/**', 
    'dist/**', 
    'build/**', 
    'scripts/fix-fast-jwt.js',
    '**/*.min.js'
  ]
});

console.log(\`üìã –ù–∞–π–¥–µ–Ω–æ \${jsFiles.length} JS —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏\`);

// –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
let modifiedFiles = 0;
let skippedFiles = 0;
let errorFiles = 0;

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã fast-jwt –Ω–∞ jsonwebtoken
jsFiles.forEach(file => {
  try {
    let content = fs.readFileSync(file, 'utf8');
    let originalContent = content;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ñ–∞–π–ª –∏–º–ø–æ—Ä—Ç—ã fast-jwt
    const hasFastJwt = content.includes('fast-jwt') || 
                       content.includes('createSigner') || 
                       content.includes('createVerifier');
    
    if (!hasFastJwt) {
      skippedFiles++;
      return;
    }
    
    // –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç—ã fast-jwt –Ω–∞ jsonwebtoken
    let modified = false;
    
    // –ó–∞–º–µ–Ω–∞ CommonJS –∏–º–ø–æ—Ä—Ç–æ–≤
    if (content.includes("require('fast-jwt')") || content.includes('require("fast-jwt")')) {
      content = content.replace(
        /const\s+\{\s*createSigner\s*,\s*createVerifier\s*\}\s*=\s*require\(['"]fast-jwt['"]\)/g,
        "const jwt = require('jsonwebtoken')"
      );
      modified = true;
    }
    
    // –ó–∞–º–µ–Ω–∞ ES6 –∏–º–ø–æ—Ä—Ç–æ–≤
    if (content.includes("from 'fast-jwt'") || content.includes('from "fast-jwt"')) {
      content = content.replace(
        /import\s+\{\s*createSigner\s*,\s*createVerifier\s*\}\s+from\s+['"]fast-jwt['"]/g,
        "import jwt from 'jsonwebtoken'"
      );
      modified = true;
    }
    
    // –ó–∞–º–µ–Ω–∞ –≤—ã–∑–æ–≤–æ–≤ createSigner –∏ createVerifier
    if (content.includes('createSigner(') || content.includes('createVerifier(')) {
      // –ó–∞–º–µ–Ω–∞ createSigner
      content = content.replace(
        /const\s+sign\s*=\s*createSigner\(\s*\{\s*key\s*:\s*([^}]+)\s*\}\s*\)/g,
        "// –ó–∞–º–µ–Ω–µ–Ω–æ fast-jwt –Ω–∞ jsonwebtoken\\nconst sign = (payload, options) => jwt.sign(payload, $1, options)"
      );
      
      // –ó–∞–º–µ–Ω–∞ createVerifier
      content = content.replace(
        /const\s+verify\s*=\s*createVerifier\(\s*\{\s*key\s*:\s*([^}]+)\s*\}\s*\)/g,
        "// –ó–∞–º–µ–Ω–µ–Ω–æ fast-jwt –Ω–∞ jsonwebtoken\\nconst verify = (token, options) => jwt.verify(token, $1, options)"
      );
      
      modified = true;
    }
    
    if (modified) {
      fs.writeFileSync(file, content);
      console.log(\`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: \${file}\`);
      modifiedFiles++;
    } else {
      skippedFiles++;
    }
  } catch (error) {
    console.error(\`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ \${file}:\`, error.message);
    errorFiles++;
  }
});

console.log('\\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(\`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: \${modifiedFiles} —Ñ–∞–π–ª–æ–≤\`);
console.log(\`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: \${skippedFiles} —Ñ–∞–π–ª–æ–≤\`);
console.log(\`‚ùå –û—à–∏–±–∫–∏: \${errorFiles} —Ñ–∞–π–ª–æ–≤\`);

console.log('\\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ fast-jwt –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
`;
    
    fs.writeFileSync('scripts/fix-fast-jwt.js', fixFastJwtContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω scripts/fix-fast-jwt.js');
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ scripts/fix-canvas.js
  if (missingFiles.includes('scripts/fix-canvas.js')) {
    ensureDirectoryExists('scripts');
    const fixCanvasContent = `const fs = require('fs');
const path = require('path');
const glob = require('glob');

console.log('üîÑ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ canvas...');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è glob
try {
  require.resolve('glob');
} catch (e) {
  console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ glob...');
  require('child_process').execSync('npm install glob', { stdio: 'inherit' });
  console.log('‚úÖ –ü–∞–∫–µ—Ç glob —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ JS —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ
console.log('üîç –ü–æ–∏—Å–∫ JS —Ñ–∞–π–ª–æ–≤...');
const jsFiles = glob.sync('**/*.js', {
  ignore: [
    'node_modules/**', 
    'dist/**', 
    'build/**', 
    'scripts/fix-canvas.js',
    '**/*.min.js'
  ]
});

console.log(\`üìã –ù–∞–π–¥–µ–Ω–æ \${jsFiles.length} JS —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏\`);

// –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
let modifiedFiles = 0;
let skippedFiles = 0;
let errorFiles = 0;

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã canvas –Ω–∞ skia-canvas
jsFiles.forEach(file => {
  try {
    let content = fs.readFileSync(file, 'utf8');
    let originalContent = content;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ñ–∞–π–ª –∏–º–ø–æ—Ä—Ç—ã canvas
    const hasCanvas = content.includes('canvas') || 
                      content.includes('new Canvas(')) || 
                      content.includes('Canvas');
    
    if (!hasCanvas) {
      skippedFiles++;
      return;
    }
    
    // –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç—ã canvas –Ω–∞ skia-canvas
    let modified = false;
    
    // –ó–∞–º–µ–Ω–∞ CommonJS –∏–º–ø–æ—Ä—Ç–æ–≤
    if (content.includes("require('canvas')") || content.includes('require("canvas")')) {
      content = content.replace(
        /const\s+\{\s*new Canvas(\s*(?:,\s*[^}]+))?\s*\}\s*=\s*require\(['"]canvas['"]\)/g,
        "const { Canvas } = require('skia-canvas')"
      );
      
      content = content.replace(
        /const\s+Canvas\s*=\s*require\(['"]canvas['"]\)/g,
        "const { Canvas } = require('skia-canvas')"
      );
      
      modified = true;
    }
    
    // –ó–∞–º–µ–Ω–∞ ES6 –∏–º–ø–æ—Ä—Ç–æ–≤
    if (content.includes("from 'canvas'") || content.includes('from "canvas"')) {
      content = content.replace(
        /import\s+\{\s*new Canvas(\s*(?:,\s*[^}]+))?\s*\}\s+from\s+['"]canvas['"]/g,
        "import { Canvas } from 'skia-canvas'"
      );
      
      content = content.replace(
        /import\s+Canvas\s+from\s+['"]canvas['"]/g,
        "import { Canvas } from 'skia-canvas'"
      );
      
      modified = true;
    }
    
    // –ó–∞–º–µ–Ω–∞ –≤—ã–∑–æ–≤–æ–≤ new Canvas(
    if (content.includes('new Canvas((')))) {
      content = content.replace(
        /new Canvas(\(([^))]+)\)/g,
        "new Canvas($1)"
      );
      
      modified = true;
    }
    
    if (modified) {
      fs.writeFileSync(file, content);
      console.log(\`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: \${file}\`);
      modifiedFiles++;
    } else {
      skippedFiles++;
    }
  } catch (error) {
    console.error(\`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ \${file}:\`, error.message);
    errorFiles++;
  }
});

console.log('\\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(\`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: \${modifiedFiles} —Ñ–∞–π–ª–æ–≤\`);
console.log(\`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: \${skippedFiles} —Ñ–∞–π–ª–æ–≤\`);
console.log(\`‚ùå –û—à–∏–±–∫–∏: \${errorFiles} —Ñ–∞–π–ª–æ–≤\`);

console.log('\\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ canvas –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
`;
    
    fs.writeFileSync('scripts/fix-canvas.js', fixCanvasContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω scripts/fix-canvas.js');
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤...
  // (–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç)
  
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
} else {
  console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
}

// –®–∞–≥ 9: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
console.log('\nüìã –®–∞–≥ 9: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
runCommand('npm install --no-save glob');
runCommand('npm install --save jsonwebtoken');
runCommand('npm install --save skia-canvas');
runCommand('npm install --save-dev jest @jest/globals');

console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
console.log('\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
console.log('Linux/macOS: ./run-all-fixes.sh');
console.log('Windows (CMD): run-all-fixes.bat');
console.log('Windows (PowerShell): ./run-all-fixes.ps1');
console.log('\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Docker –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
console.log('Linux/macOS: ./run-in-docker.sh');
console.log('Windows (CMD): run-in-docker.bat');
console.log('Windows (PowerShell): ./run-docker.ps1');
