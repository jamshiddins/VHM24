const fs = require('fs');
const path = require('path');
const glob = require('glob');

console.log('üîÑ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ canvas...');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è glob
try {
  require.resolve('glob');
} catch (e) {
  console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ glob...');
  require('child_process').execSync('npm install glob', { stdio: 'inherit' });
  console.log('‚úÖ –ü–∞–∫–µ—Ç glob —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ JS —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ
console.log('üîç –ü–æ–∏—Å–∫ JS —Ñ–∞–π–ª–æ–≤...');
const jsFiles = glob.sync('**/*.js', {
  ignore: [
    'node_modules/**', 
    'dist/**', 
    'build/**', 
    'scripts/fix-canvas.js',
    '**/*.min.js'
  ]
});

console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${jsFiles.length} JS —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);

// –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
let modifiedFiles = 0;
let skippedFiles = 0;
let errorFiles = 0;

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã canvas –Ω–∞ skia-canvas
jsFiles.forEach(file => {
  try {
    let content = fs.readFileSync(file, 'utf8');
    let originalContent = content;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ñ–∞–π–ª –∏–º–ø–æ—Ä—Ç—ã canvas
    const hasCanvas = content.includes('canvas') || 
                      content.includes('createCanvas') || 
                      content.includes('Canvas');
    
    if (!hasCanvas) {
      skippedFiles++;
      return;
    }
    
    // –ó–∞–º–µ–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç—ã canvas –Ω–∞ skia-canvas
    let modified = false;
    
    // –ó–∞–º–µ–Ω–∞ CommonJS –∏–º–ø–æ—Ä—Ç–æ–≤
    if (content.includes("require('canvas')") || content.includes('require("canvas")')) {
      content = content.replace(
        /consts+{s*createCanvass*(?:,s*[^}]+)?s*}s*=s*require(['"]canvas['"])/g,
        "const { Canvas } = require('skia-canvas')"
      );
      
      content = content.replace(
        /consts+Canvass*=s*require(['"]canvas['"])/g,
        "const { Canvas } = require('skia-canvas')"
      );
      
      modified = true;
    }
    
    // –ó–∞–º–µ–Ω–∞ ES6 –∏–º–ø–æ—Ä—Ç–æ–≤
    if (content.includes("from 'canvas'") || content.includes('from "canvas"')) {
      content = content.replace(
        /imports+{s*createCanvass*(?:,s*[^}]+)?s*}s+froms+['"]canvas['"]/g,
        "import { Canvas } from 'skia-canvas'"
      );
      
      content = content.replace(
        /imports+Canvass+froms+['"]canvas['"]/g,
        "import { Canvas } from 'skia-canvas'"
      );
      
      modified = true;
    }
    
    // –ó–∞–º–µ–Ω–∞ –≤—ã–∑–æ–≤–æ–≤ createCanvas
    if (content.includes('createCanvas(')) {
      content = content.replace(
        /createCanvas(([^)]+))/g,
        "new Canvas($1)"
      );
      
      modified = true;
    }
    
    if (modified) {
      fs.writeFileSync(file, content);
      console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: ${file}`);
      modifiedFiles++;
    } else {
      skippedFiles++;
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ ${file}:`, error.message);
    errorFiles++;
  }
});

console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${modifiedFiles} —Ñ–∞–π–ª–æ–≤`);
console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedFiles} —Ñ–∞–π–ª–æ–≤`);
console.log(`‚ùå –û—à–∏–±–∫–∏: ${errorFiles} —Ñ–∞–π–ª–æ–≤`);

console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ canvas –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
