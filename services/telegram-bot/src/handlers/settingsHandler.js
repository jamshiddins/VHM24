async function handleSettings(bot, msg) {
  const chatId = msg.chat.id;
  
  try {
    await bot.sendMessage(chatId, 
      '‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ VHM24*\n\n' +
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞:',
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data: 'settings_notifications' },
              { text: 'üåê –Ø–∑—ã–∫', callback_data: 'settings_language' }
            ],
            [
              { text: 'üìç –õ–æ–∫–∞—Ü–∏—è', callback_data: 'settings_location' },
              { text: '‚è∞ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', callback_data: 'settings_timezone' }
            ],
            [
              { text: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'settings_profile' },
              { text: 'üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', callback_data: 'settings_security' }
            ],
            [
              { text: 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', callback_data: 'settings_support' }
            ]
          ]
        }
      }
    );
  } catch (error) {
    global.logger.error('Settings handler error:', error);
    await bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  }
}

module.exports = { handleSettings };
