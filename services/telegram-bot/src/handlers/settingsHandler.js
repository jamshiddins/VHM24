async function handleSettings(bot, msg) {
  const chatId = msg.chat.id;
  
  try {
    await bot.sendMessage(chatId, 
      '‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ VHM24*\n\n' +
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞:',
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data: 'settings_notifications' },
              { text: 'üåê –Ø–∑—ã–∫', callback_data: 'settings_language' }
            ],
            [
              { text: 'üìç –õ–æ–∫–∞—Ü–∏—è', callback_data: 'settings_location' },
              { text: '‚è∞ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', callback_data: 'settings_timezone' }
            ],
            [
              { text: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'settings_profile' },
              { text: 'üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', callback_data: 'settings_security' }
            ],
            [
              { text: 'üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data: 'settings_link_account' },
              { text: 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', callback_data: 'settings_support' }
            ]
          ]
        }
      }
    );
  } catch (error) {
    global.logger.error('Settings handler error:', error);
    await bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
async function handleLinkAccount(bot, msg, email) {
  const chatId = msg.chat.id;
  const telegramId = msg.from.id.toString();
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const token = global.userTokens.get(msg.from.id);
    
    if (!token) {
      await bot.sendMessage(chatId, 
        '‚ö†Ô∏è –î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.\n' +
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å:',
        {
          reply_markup: {
            force_reply: true,
            selective: true
          }
        }
      );
      return;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏–≤—è–∑–∫—É Telegram ID
    const response = await global.apiClient.post('/auth/link-telegram', {
      telegramId
    });
    
    if (response.data.success) {
      await bot.sendMessage(chatId, 
        '‚úÖ –í–∞—à Telegram –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Å–∏—Å—Ç–µ–º–µ VHM24!\n\n' +
        '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É 24/7.'
      );
    } else {
      await bot.sendMessage(chatId, 
        '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç.\n' +
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
      );
    }
  } catch (error) {
    global.logger.error('Link account error:', error);
    await bot.sendMessage(chatId, 
      '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞.\n' +
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
    );
  }
}

module.exports = { handleSettings, handleLinkAccount };
