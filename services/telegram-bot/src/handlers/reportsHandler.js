async function handleReports(bot, msg) {
  const chatId = msg.chat.id;
  
  try {
    await bot.sendMessage(chatId, 
      'üìä *–û—Ç—á–µ—Ç—ã VHM24*\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞:',
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üìà –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –¥–µ–Ω—å', callback_data: 'report_sales_day' },
              { text: 'üìä –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –Ω–µ–¥–µ–ª—é', callback_data: 'report_sales_week' }
            ],
            [
              { text: 'üè≠ –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–æ–≤', callback_data: 'report_machines' },
              { text: 'üì¶ –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤', callback_data: 'report_inventory' }
            ],
            [
              { text: 'üìã –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏', callback_data: 'report_tasks' },
              { text: 'üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç', callback_data: 'report_finance' }
            ],
            [
              { text: 'üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç', callback_data: 'report_full' }
            ]
          ]
        }
      }
    );
  } catch (error) {
    global.logger.error('Reports handler error:', error);
    await bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤');
  }
}

module.exports = { handleReports };
