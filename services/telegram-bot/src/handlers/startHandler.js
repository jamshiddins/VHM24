export async function handleStart(bot, msg) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const username = msg.from.username || 'Operator';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
  try {
    const response = await global.apiClient.post('/auth/login', {
      telegramId: userId.toString()
    });
    
    if (response.data.success) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
      global.userTokens.set(userId, response.data.token);
      global.currentUserId = userId;
      
      await bot.sendMessage(chatId, 
        `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *VHM24 - VendHub Manager 24/7*!\n\n` +
        `‚è∞ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö\n\n` +
        `üë§ ${response.data.user.name}\n` +
        `üìß ${response.data.user.email}\n` +
        `üîë –†–æ–ª–∏: ${response.data.user.roles.join(', ')}\n\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.`,
        { parse_mode: 'Markdown' }
      );
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
      await showMainMenu(bot, chatId, response.data.user.roles);
    } else {
      // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      await bot.sendMessage(chatId,
        `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *VHM24 - VendHub Manager 24/7*!\n\n` +
        `‚è∞ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ñ–µ–π–Ω—ã–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∞–º–∏,\n—Ä–∞–±–æ—Ç–∞—é—â–∏–º–∏ 24 —á–∞—Å–∞ –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞.\n\n` +
        `–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.\n` +
        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:`,
        {
          parse_mode: 'Markdown',
          reply_markup: {
            keyboard: [[{
              text: 'üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
              request_contact: true
            }]],
            resize_keyboard: true,
            one_time_keyboard: true
          }
        }
      );
    }
  } catch (error) {
    await bot.sendMessage(chatId,
      `‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ VHM24.\n` +
      `–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7, –Ω–æ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n` +
      `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`
    );
  }
}

async function showMainMenu(bot, chatId, roles) {
  const keyboards = [];
  
  // –ú–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
  if (roles.includes('ADMIN') || roles.includes('MANAGER')) {
    keyboards.push([
      { text: 'üè≠ –ê–≤—Ç–æ–º–∞—Ç—ã 24/7', callback_data: 'menu_machines' },
      { text: 'üìä –û—Ç—á–µ—Ç—ã', callback_data: 'menu_reports' }
    ]);
  }
  
  if (roles.includes('OPERATOR') || roles.includes('WAREHOUSE')) {
    keyboards.push([
      { text: 'üóÉÔ∏è –ë—É–Ω–∫–µ—Ä—ã', callback_data: 'menu_bunkers' },
      { text: 'üìã –ó–∞–¥–∞—á–∏', callback_data: 'menu_tasks' }
    ]);
  }
  
  keyboards.push([
    { text: 'üì¶ –°–∫–ª–∞–¥', callback_data: 'menu_inventory' },
    { text: 'üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ', callback_data: 'menu_urgent' }
  ]);
  
  keyboards.push([
    { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'menu_settings' },
    { text: 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', callback_data: 'menu_support' }
  ]);
  
  await bot.sendMessage(chatId, 
    `üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é VHM24*\n‚è∞ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboards
      }
    }
  );
}

export { showMainMenu };
