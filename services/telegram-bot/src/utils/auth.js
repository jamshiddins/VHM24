async function checkAuth(bot, msg) {
  const userId = msg.from.id;
  const chatId = msg.chat.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const token = global.userTokens?.get(userId);
  
  if (!token) {
    await bot.sendMessage(chatId, 
      'üîê *–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è*\n\n' +
      '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VHM24 –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.\n' +
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.',
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É', callback_data: 'start_auth' }]
          ]
        }
      }
    );
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ API
  try {
    const response = await global.apiClient.get('/auth/me');
    
    if (response.data.success) {
      // –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      global.currentUserId = userId;
      return true;
    } else {
      // –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, —É–¥–∞–ª—è–µ–º –µ–≥–æ
      global.userTokens.delete(userId);
      await bot.sendMessage(chatId, 
        '‚ö†Ô∏è *–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞*\n\n' +
        '–í–∞—à–∞ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ.\n' +
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start',
        { parse_mode: 'Markdown' }
      );
      return false;
    }
  } catch (error) {
    global.logger.error('Auth check error:', error);
    
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ API, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    await bot.sendMessage(chatId, 
      '‚ùå *–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏*\n\n' +
      '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é. –°–∏—Å—Ç–µ–º–∞ VHM24 –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n' +
      '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.',
      { parse_mode: 'Markdown' }
    );
    return false;
  }
}

function getUserToken(userId) {
  return global.userTokens?.get(userId);
}

function setUserToken(userId, token) {
  if (!global.userTokens) {
    global.userTokens = new Map();
  }
  global.userTokens.set(userId, token);
}

function removeUserToken(userId) {
  global.userTokens?.delete(userId);
}

function isAdmin(userId) {
  const adminIds = global.config?.adminIds || [];
  return adminIds.includes(userId.toString());
}

module.exports = {
  checkAuth,
  getUserToken,
  setUserToken,
  removeUserToken,
  isAdmin
};
