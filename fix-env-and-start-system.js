#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîß –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã VendHub...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
    try {
        console.log(`üîÑ ${description}...`);
        const result = execSync(command, { encoding: 'utf8', stdio: 'pipe' });
        console.log(`‚úÖ ${description} - —É—Å–ø–µ—à–Ω–æ`);
        return result;
    } catch (error) {
        console.log(`‚ùå ${description} - –æ—à–∏–±–∫–∞:`, error.message);
        return null;
    }
}

// –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π DATABASE_URL –∏–∑ Railway
function getRailwayDatabaseUrl() {
    try {
        console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ DATABASE_URL –∏–∑ Railway...');
        const result = execSync('railway variables --json', { encoding: 'utf8' });
        const variables = JSON.parse(result);
        
        if (variables.DATABASE_URL) {
            console.log('‚úÖ DATABASE_URL –Ω–∞–π–¥–µ–Ω –≤ Railway');
            return variables.DATABASE_URL;
        }
        
        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
        const envResult = execSync('railway variables', { encoding: 'utf8' });
        const lines = envResult.split('\n');
        
        for (const line of lines) {
            if (line.includes('DATABASE_URL') && line.includes('postgresql://')) {
                const match = line.match(/postgresql:\/\/[^\s‚îÇ‚ïë]+/);
                if (match) {
                    console.log('‚úÖ DATABASE_URL –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑ –≤—ã–≤–æ–¥–∞');
                    return match[0];
                }
            }
        }
        
        console.log('‚ö†Ô∏è DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return null;
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è DATABASE_URL:', error.message);
        return null;
    }
}

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º .env —Ñ–∞–π–ª
function fixEnvFile() {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞...');
    
    const databaseUrl = getRailwayDatabaseUrl();
    
    const envContent = `# Database
DATABASE_URL="${databaseUrl || 'postgresql://postgres:password@localhost:5432/vendhub'}"

# JWT Secret
JWT_SECRET="933f4234d58f69c74957860bf5a7a838e7c6f51f36876e5d415842bd796d6b5e"

# Telegram Bot
TELEGRAM_BOT_TOKEN="8015112367:AAHi25gHhI3p1X1uyuCAt8vUnlMZRrcoKEQ"

# Redis
REDIS_URL="redis://default:UBhuXXUjFDisRLBNOsoVNIaGHboCRPll@redis.railway.internal:6379"

# S3 / DigitalOcean Spaces
S3_ACCESS_KEY="DO00XEB6BC6XZ8Q2M4KQ"
S3_SECRET_KEY="your-secret-key-here"
S3_BUCKET="vhm24-uploads"
S3_BACKUP_BUCKET="vhm24-backups"
S3_ENDPOINT="https://fra1.digitaloceanspaces.com"
S3_REGION="fra1"

# Server
PORT=3000
NODE_ENV=development

# Railway
RAILWAY_PUBLIC_DOMAIN="web-production-73916.up.railway.app"
ADMIN_IDS="42283329"
`;

    fs.writeFileSync('.env', envContent);
    console.log('‚úÖ .env —Ñ–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
function installDependencies() {
    console.log('\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
    
    // Backend
    if (fs.existsSync('backend/package.json')) {
        process.chdir('backend');
        runCommand('npm install', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend');
        process.chdir('..');
    }
    
    // Telegram Bot
    if (fs.existsSync('apps/telegram-bot/package.json')) {
        process.chdir('apps/telegram-bot');
        runCommand('npm install', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π telegram-bot');
        process.chdir('..');
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
function setupDatabase() {
    console.log('\nüóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    if (fs.existsSync('backend/prisma/schema.prisma')) {
        process.chdir('backend');
        runCommand('npx prisma generate', '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞');
        runCommand('npx prisma db push', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –ë–î');
        process.chdir('..');
    }
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
function testConnections() {
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
    const testScript = `
const { PrismaClient } = require('@prisma/client');

async function testDatabase() {
    try {
        const prisma = new PrismaClient();
        await prisma.$connect();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');
        await prisma.$disconnect();
    } catch (error) {
        console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    }
}

testDatabase();
`;

    fs.writeFileSync('test-db-connection.js', testScript);
    
    if (fs.existsSync('backend/node_modules')) {
        process.chdir('backend');
        runCommand('node ../test-db-connection.js', '–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î');
        process.chdir('..');
    }
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    if (fs.existsSync('test-db-connection.js')) {
        fs.unlinkSync('test-db-connection.js');
    }
}

// –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞
function createStartScripts() {
    console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞...');
    
    // –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ backend
    const startBackend = `#!/usr/bin/env node
const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫ VendHub Backend...');

const backend = spawn('npm', ['start'], {
    cwd: path.join(__dirname, 'backend'),
    stdio: 'inherit'
});

backend.on('close', (code) => {
    console.log(\`Backend –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º \${code}\`);
});
`;

    fs.writeFileSync('start-backend.js', startBackend);
    
    // –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ telegram bot
    const startBot = `#!/usr/bin/env node
const { spawn } = require('child_process');
const path = require('path');

console.log('ü§ñ –ó–∞–ø—É—Å–∫ VendHub Telegram Bot...');

const bot = spawn('npm', ['start'], {
    cwd: path.join(__dirname, 'apps/telegram-bot'),
    stdio: 'inherit'
});

bot.on('close', (code) => {
    console.log(\`Telegram Bot –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º \${code}\`);
});
`;

    fs.writeFileSync('start-bot.js', startBot);
    
    // –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
    const startAll = `#!/usr/bin/env node
const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã VendHub...');

// –ó–∞–ø—É—Å–∫ backend
const backend = spawn('node', ['start-backend.js'], {
    stdio: 'inherit'
});

// –ó–∞–ø—É—Å–∫ telegram bot —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
setTimeout(() => {
    const bot = spawn('node', ['start-bot.js'], {
        stdio: 'inherit'
    });
}, 3000);

console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!');
console.log('üìä Backend: process.env.API_URL');
console.log('ü§ñ Telegram Bot: –∞–∫—Ç–∏–≤–µ–Ω');
`;

    fs.writeFileSync('start-vendhub-system.js', startAll);
    
    console.log('‚úÖ –°–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω—ã');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    try {
        console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–∏—Å—Ç–µ–º—ã VendHub\n');
        
        // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º .env
        fixEnvFile();
        
        // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        installDependencies();
        
        // 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        setupDatabase();
        
        // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        testConnections();
        
        // 5. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞
        createStartScripts();
        
        console.log('\nüéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ó–ê–ü–£–°–ö–£!');
        console.log('\nüìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:');
        console.log('   node start-backend.js     - –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ backend');
        console.log('   node start-bot.js         - –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ telegram bot');
        console.log('   node start-vendhub-system.js - –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã');
        
        console.log('\nüåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:');
        console.log('   Backend API: process.env.API_URL');
        console.log('   Railway URL: https://web-production-73916.up.railway.app');
        console.log('   Telegram Bot: @your_bot_name');
        
        console.log('\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã!');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫
main();
