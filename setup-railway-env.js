#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Railway
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node setup-railway-env.js
 */

const readline = require('readline');
const { execSync } = require('child_process');
const crypto = require('crypto');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const question = (query) => new Promise((resolve) => rl.question(query, resolve));

async function main() {
  console.log('üöÄ VHM24 Railway Environment Setup\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Railway CLI
  try {
    execSync('railway --version', { stdio: 'ignore' });
  } catch (error) {
    console.error('‚ùå Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: npm install -g @railway/cli');
    console.log('–ò–ª–∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º: https://docs.railway.app/develop/cli');
    process.exit(1);
  }
  
  console.log('‚úÖ Railway CLI –æ–±–Ω–∞—Ä—É–∂–µ–Ω\n');
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT —Å–µ–∫—Ä–µ—Ç
  const jwtSecret = crypto.randomBytes(32).toString('base64');
  console.log('üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω JWT_SECRET:', jwtSecret);
  
  // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase Dashboard:\n');
  
  const supabaseUrl = await question('SUPABASE_URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://xxxxx.supabase.co): ');
  const supabaseAnonKey = await question('SUPABASE_ANON_KEY (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å eyJ...): ');
  const databaseUrl = await question('DATABASE_URL (postgresql://...): ');
  
  console.log('\nüì± Telegram Bot (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):');
  const telegramToken = await question('TELEGRAM_BOT_TOKEN: ');
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const envVars = {
    DATABASE_URL: databaseUrl,
    JWT_SECRET: jwtSecret,
    SUPABASE_URL: supabaseUrl,
    SUPABASE_ANON_KEY: supabaseAnonKey,
    NODE_ENV: 'production',
    GATEWAY_PORT: '8000',
    AUTH_PORT: '3001',
    MACHINES_PORT: '3002',
    INVENTORY_PORT: '3003',
    TASKS_PORT: '3004',
    BUNKERS_PORT: '3005'
  };
  
  if (telegramToken) {
    envVars.TELEGRAM_BOT_TOKEN = telegramToken;
    envVars.TELEGRAM_WEBHOOK_URL = 'https://vhm24-production.up.railway.app/webhook';
  }
  
  console.log('\nüîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway...\n');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  for (const [key, value] of Object.entries(envVars)) {
    try {
      console.log(`Setting ${key}...`);
      execSync(`railway variables set ${key}="${value}"`, { stdio: 'inherit' });
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ ${key}:`, error.message);
    }
  }
  
  console.log('\n‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –°–¥–µ–ª–∞–π—Ç–µ commit –∏–∑–º–µ–Ω–µ–Ω–∏–π:');
  console.log('   git add .');
  console.log('   git commit -m "Configure Railway deployment"');
  console.log('   git push');
  console.log('\n2. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–µ–ø–ª–æ–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
  console.log('\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É:');
  console.log('   curl https://vhm24-production.up.railway.app/health');
  console.log('   curl https://vhm24-production.up.railway.app/api/v1/test-db');
  
  rl.close();
}

main().catch(error => {
  console.error('–û—à–∏–±–∫–∞:', error);
  rl.close();
  process.exit(1);
});
